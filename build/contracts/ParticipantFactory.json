{
  "contractName": "ParticipantFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_hashUsername",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "changeInvestor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hashUsername",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "coverageSize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalClaims",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "newParticipant",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_getInvestorOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getParticipantOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_updateCapital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_capital",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hashUsername",
          "type": "bytes32"
        }
      ],
      "name": "createInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapCoverageSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapPremium",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapTotalClaims",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "internalType": "address",
          "name": "investorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentToInvestor",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "time",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_coverageSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalClaims",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_premium",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hashUsername",
          "type": "bytes32"
        }
      ],
      "name": "createParticipant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashUsername",
          "type": "bytes32"
        }
      ],
      "name": "registerClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hashUsername\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"changeInvestor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hashUsername\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coverageSize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalClaims\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"}],\"name\":\"newParticipant\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_getInvestorOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getParticipantOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_updateCapital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_capital\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hashUsername\",\"type\":\"bytes32\"}],\"name\":\"createInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverageSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalClaims\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_premium\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hashUsername\",\"type\":\"bytes32\"}],\"name\":\"createParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapCoverageSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapPremium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapTotalClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentToInvestor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashUsername\",\"type\":\"bytes32\"}],\"name\":\"registerClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/praneet/college/others/RiskSmartContract/contracts/Participant.sol\":\"ParticipantFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/praneet/college/others/RiskSmartContract/contracts/InvestorFactory.sol\":{\"keccak256\":\"0xef924ed338088802b76af01ca3c1239acf68bb8c5ac95c467f80a6fc483f9057\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f91cde4fd54e96094a32a390a73f13d3b40529d855ccd9141e20c728f3a72935\",\"dweb:/ipfs/QmXBuqhycHkYb4hmD9aZrH2dhtZx7CSuVFYhmfik7v5PpJ\"]},\"/Users/praneet/college/others/RiskSmartContract/contracts/Participant.sol\":{\"keccak256\":\"0x6f6dca37e1ce8091ed83037cf1930b158c1ad9f10172b9819e0085298e26cf7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47da96f8206896724be9d83c7b01c5a7b047434b3b1c5500d1a776e8c50d738b\",\"dweb:/ipfs/QmaFBCtGUGCGcwqxUtJmV21U8WesCygxRuL88nPP9bJjFd\"]},\"/Users/praneet/college/others/RiskSmartContract/contracts/Platform.sol\":{\"keccak256\":\"0xaea5e6d1013f663085317b50acfd9ff63cbe114a51bc349559ffd7cd6895f572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06364be791bd1565661467e44f94682b307e049caf8fd66ec1f5ab7dffba74b2\",\"dweb:/ipfs/QmVz4ArWpf9mXv9fXLXfm55QzSKMJUDxzDvN2osGXH8wtM\"]},\"/Users/praneet/college/others/RiskSmartContract/contracts/PlatformSetup.sol\":{\"keccak256\":\"0x46e617fb53f09479ca319374a50598317a9d88b1510a365570b4d5e8dcde157d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97fb9c2dd6e1e8901d62a7eb52b2d7c9a911ccb40018841c43ebe04af62f4f5a\",\"dweb:/ipfs/QmWeDoLs8fF4Jut737b95HSxWzF6tGoncqLkEfW4azZATh\"]},\"/Users/praneet/college/others/RiskSmartContract/contracts/Token.sol\":{\"keccak256\":\"0xba00bce5b537ec24999816481a7d509a9639404b105cb210754d51e7d3282bd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ef6574b8bdd8105cacfbe81b68495fe3d95f2ac5f28888c4d7bdceb8812ebba\",\"dweb:/ipfs/QmSPfqqgrzY3gRHrzPHVwAGyMzADkqQrCpYrjoY7tCGXMG\"]},\"/Users/praneet/college/others/RiskSmartContract/contracts/WadMath.sol\":{\"keccak256\":\"0x42224a7949c301f5f5bd5aee7ae932c16e337b42c3a05d5a313f0679c98b1a3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd2c46843e56c870f8ea825014cf2ae60f2d825692eca0863f7fac1579fc4d75\",\"dweb:/ipfs/QmWtAaRJMmGsjsknHAyryK9xZsC9hPKyVxSg4B21opemnC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806373a14b6911610097578063d9e0627011610066578063d9e062701461029c578063e11754e5146102cc578063ff63ac3b146102ea578063ffcba7681461030857610100565b806373a14b69146102035780637423b4d114610233578063751dd4861461024f57806387d817891461026b57610100565b8063279598fe116100d3578063279598fe1461018f5780632b76cc50146101ad5780632bdbf9a8146101b75780635a6e5237146101d357610100565b806309097092146101055780630fb5a6b41461013557806316ada547146101535780632096525514610171575b600080fd5b61011f600480360381019061011a9190612984565b610338565b60405161012c9190612e36565b60405180910390f35b61013d610350565b60405161014a9190612e36565b60405180910390f35b61015b610357565b6040516101689190612e36565b60405180910390f35b61017961035d565b6040516101869190612e36565b60405180910390f35b610197610401565b6040516101a49190612d0d565b60405180910390f35b6101b5610418565b005b6101d160048036038101906101cc9190612a51565b61041a565b005b6101ed60048036038101906101e89190612984565b61086d565b6040516101fa9190612e36565b60405180910390f35b61021d60048036038101906102189190612984565b610885565b60405161022a9190612d0d565b60405180910390f35b61024d600480360381019061024891906129d6565b6108a5565b005b61026960048036038101906102649190612a8d565b6109a8565b005b610285600480360381019061028091906129ff565b610ca4565b604051610293929190612ce4565b60405180910390f35b6102b660048036038101906102b19190612984565b610cf8565b6040516102c39190612e36565b60405180910390f35b6102d4610d10565b6040516102e19190612d0d565b60405180910390f35b6102f2610d27565b6040516102ff9190612e36565b60405180910390f35b610322600480360381019061031d9190612984565b610d83565b60405161032f9190612e36565b60405180910390f35b601d6020528060005260406000206000915090505481565b620fd20081565b60015481565b60008060001b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156103ae57600080fd5b6000601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506103fb81610d9b565b91505090565b6000600960009054906101000a900460ff16905090565b565b610422610401565b610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045890612dd6565b60405180910390fd5b6000801b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90612e16565b60405180910390fd5b600e600082815260200190815260200160002060009054906101000a900460ff1615801561053157506011600082815260200190815260200160002060009054906101000a900460ff16155b610570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056790612db6565b60405180910390fd5b80601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336016600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561067057600080fd5b505afa158015610684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a89190612a28565b836106b39190612eb8565b90506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561071f57600080fd5b505afa158015610733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107579190612a28565b826107629190612ee9565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107c393929190612cad565b602060405180830381600087803b1580156107dd57600080fd5b505af11580156107f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081591906129ad565b50610824838260018033610db8565b61082e3383611294565b7f86790858d185786f1b01acdbd51f684bc572ba946e11bbd08b12b0559bf94553838360405161085f929190612d28565b60405180910390a150505050565b601a6020528060005260406000206000915090505481565b601e6020528060005260406000206000915054906101000a900460ff1681565b6000801b601960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156108f457600080fd5b601960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811461093f57600080fd5b600015156010600083815260200190815260200160002060009054906101000a900460ff1615151461097057600080fd5b60016010600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506109a581611327565b50565b6109b0610d10565b6109ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e690612dd6565b60405180910390fd5b6000801b601960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610a3d57600080fd5b600e600082815260200190815260200160002060009054906101000a900460ff16158015610a8957506011600082815260200190815260200160002060009054906101000a900460ff16155b610ac8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abf90612db6565b60405180910390fd5b80601960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336016600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180606001604052808581526020018481526020018381525060186000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306005546040518463ffffffff1660e01b8152600401610c0e93929190612cad565b602060405180830381600087803b158015610c2857600080fd5b505af1158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6091906129ad565b507f050ea5500ffb8b8a4dd350d3ab6838c43ffd4bd939baed169bdd4b145c77b78e81858585604051610c969493929190612d51565b60405180910390a150505050565b60178181548110610cb457600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b601c6020528060005260406000206000915090505481565b6000600960019054906101000a900460ff16905090565b600080620fd20060015442610d3c9190612f43565b10159050808015610d595750600260009054906101000a900460ff165b15610d6f576000600181905550610d6e611c31565b5b60015442610d7d9190612f43565b91505090565b601b6020528060005260406000206000915090505481565b600060036000838152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff166012600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610e8457508073ffffffffffffffffffffffffffffffffffffffff166012600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610e8d57600080fd5b818015610eb85750600e600086815260200190815260200160002060009054906101000a900460ff16155b15610f1357600c8590806001815401808255809150506001900390600052602060002001600090919091909150556001600e600087815260200190815260200160002060006101000a81548160ff0219169083151502179055505b81156111ab5760008411156111a65760006103e885601454610f359190612ee9565b610f3f9190612eb8565b90506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fab57600080fd5b505afa158015610fbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe39190612a28565b86610fee9190612eb8565b90508186610ffc9190612f43565b955084806110c05750600081601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016110639190612c92565b60206040518083038186803b15801561107b57600080fd5b505afa15801561108f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b39190612a28565b6110bd9190612f43565b10155b6110ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f690612d96565b60405180910390fd5b841561115657816000808282546111169190612e62565b9250508190555081600d600089815260200190815260200160002060008282546111409190612e62565b925050819055506111518382611294565b6111a3565b816000808282546111679190612f43565b9250508190555081600d600089815260200190815260200160002060008282546111919190612f43565b925050819055506111a283826124c6565b5b50505b611230565b6011600086815260200190815260200160002060009054906101000a900460ff16156111d657600080fd5b600f85908060018154018082558091505060019003906000526020600020016000909190919091505560016011600087815260200190815260200160002060006101000a81548160ff021916908315150217905550600093505b806012600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061128d858585612559565b5050505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e6ec24783836040518363ffffffff1660e01b81526004016112f1929190612ce4565b600060405180830381600087803b15801561130b57600080fd5b505af115801561131f573d6000803e3d6000fd5b505050505050565b6000600a5490506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561139857600080fd5b505afa1580156113ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d09190612a28565b600a546113dd9190612eb8565b90506000805b600c80549050811015611a80576000600c828154811061142c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160166000600c86815481106114b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161150b9190612c92565b60206040518083038186803b15801561152357600080fd5b505afa158015611537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155b9190612a28565b846115669190612ee9565b600d600083815260200190815260200160002054106119b1576116fb600c83815481106115bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160166000600c8881548110611643577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016116999190612c92565b60206040518083038186803b1580156116b157600080fd5b505afa1580156116c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e99190612a28565b866116f49190612ee9565b6000612559565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160166000600c8681548110611777577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016117cd9190612c92565b60206040518083038186803b1580156117e557600080fd5b505afa1580156117f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181d9190612a28565b846118289190612ee9565b600d6000838152602001908152602001600020600082825461184a9190612f43565b92505081905550601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160166000600c86815481106118cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016119239190612c92565b60206040518083038186803b15801561193b57600080fd5b505afa15801561194f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119739190612a28565b8461197e9190612ee9565b856119899190612f43565b9450600d600082815260200190815260200160002054836119aa9190612e62565b9250611a6c565b6000600d6000838152602001908152602001600020541115611a6b57611a30600c8381548110611a0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154600d6000848152602001908152602001600020546000612559565b6000600d600083815260200190815260200160002081905550600d60008281526020019081526020016000205485611a689190612f43565b94505b5b508080611a7890612fc9565b9150506113e3565b50828111611b245760005b600c80549050811015611b08576000600d6000600c8481548110611ad8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001548152602001908152602001600020819055508080611b0090612fc9565b915050611a8b565b50611b1f8184611b189190612f43565b6000612649565b611c1d565b60005b600c80549050811015611c1b57818483611b419190612f43565b600d6000600c8581548110611b7f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002054611ba39190612ee9565b611bad9190612eb8565b600d6000600c8481548110611beb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001548152602001908152602001600020819055508080611c1390612fc9565b915050611b27565b505b611c2b84600a546001612559565b50505050565b611c396126db565b60005b600c805490508110156120e5576000611c98600c8381548110611c88577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154610d9b565b90506000811015611ca857600080fd5b6000811115611dd957600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60126000600c8681548110611d2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401611d85929190612ce4565b602060405180830381600087803b158015611d9f57600080fd5b505af1158015611db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd791906129ad565b505b600060036000600c8581548110611e19577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002081905550600060126000600c8581548110611e76577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401611f0f9190612c92565b60206040518083038186803b158015611f2757600080fd5b505afa158015611f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5f9190612a28565b9050611f6b82826124c6565b600060126000600c8781548110611fab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600e6000600c8781548110612042577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600d6000600c87815481106120b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015481526020019081526020016000208190555050505080806120dd90612fc9565b915050611c3c565b50600c60006120f491906128dd565b60005b600f8054905081101561247f5760106000600f8381548110612142577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161561229857600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60126000600f85815481106121ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a546040518363ffffffff1660e01b8152600401612244929190612ce4565b602060405180830381600087803b15801561225e57600080fd5b505af1158015612272573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229691906129ad565b505b600060036000600f84815481106122d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002081905550600060126000600f8481548110612335577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060116000600f84815481106123cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548160ff021916908315150217905550600060106000600f848154811061243c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548160ff021916908315150217905550808061247790612fc9565b9150506120f7565b50600f600061248e91906128dd565b6001600960006101000a81548160ff0219169083151502179055506001600960016101000a81548160ff021916908315150217905550565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636161eb1883836040518363ffffffff1660e01b8152600401612523929190612ce4565b600060405180830381600087803b15801561253d57600080fd5b505af1158015612551573d6000803e3d6000fd5b505050505050565b8015612619576011600084815260200190815260200160002060009054906101000a900460ff16801561258d575060008214155b156125ea576010600084815260200190815260200160002060009054906101000a900460ff16156125bd57600080fd5b60016010600085815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8160036000858152602001908152602001600020600082825461260d9190612e62565b92505081905550612644565b8160036000858152602001908152602001600020600082825461263c9190612f43565b925050819055505b505050565b806126bd5760008260045461265e9190612f43565b101561269f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269690612df6565b60405180910390fd5b81600460008282546126b19190612f43565b925050819055506126d7565b81600460008282546126cf9190612e62565b925050819055505b5050565b6000600654600c805490506126f09190612ee9565b600554600f805490506127039190612ee9565b61270d9190612f43565b905060005b600c805490508110156128b6576000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160126000600c868154811061279d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016127f39190612c92565b60206040518083038186803b15801561280b57600080fd5b505afa15801561281f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128439190612a28565b6006546128509190612ee9565b90506128a2600c838154811061288f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154826001612559565b5080806128ae90612fc9565b915050612712565b5060008110156128c557600080fd5b60008111156128da576128d9816001612649565b5b50565b50805460008255906000526020600020908101906128fb91906128fe565b50565b5b808211156129175760008160009055506001016128ff565b5090565b60008135905061292a81613070565b92915050565b60008151905061293f81613087565b92915050565b6000813590506129548161309e565b92915050565b600081359050612969816130b5565b92915050565b60008151905061297e816130b5565b92915050565b60006020828403121561299657600080fd5b60006129a48482850161291b565b91505092915050565b6000602082840312156129bf57600080fd5b60006129cd84828501612930565b91505092915050565b6000602082840312156129e857600080fd5b60006129f684828501612945565b91505092915050565b600060208284031215612a1157600080fd5b6000612a1f8482850161295a565b91505092915050565b600060208284031215612a3a57600080fd5b6000612a488482850161296f565b91505092915050565b60008060408385031215612a6457600080fd5b6000612a728582860161295a565b9250506020612a8385828601612945565b9150509250929050565b60008060008060808587031215612aa357600080fd5b6000612ab18782880161295a565b9450506020612ac28782880161295a565b9350506040612ad38782880161295a565b9250506060612ae487828801612945565b91505092959194509250565b612af981612f77565b82525050565b612b0881612f89565b82525050565b612b1781612f95565b82525050565b6000612b2a602183612e51565b91507f63616e27742068617665206e6567617469766520746f6b656e2062616c616e6360008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b90600e83612e51565b91507f557365726e616d652074616b656e0000000000000000000000000000000000006000830152602082019050919050565b6000612bd0601083612e51565b91507f63757272656e746c7920636c6f736564000000000000000000000000000000006000830152602082019050919050565b6000612c10601583612e51565b91507f506c6174666f726d206f7574206f66206d6f6e657900000000000000000000006000830152602082019050919050565b6000612c50601483612e51565b91507f6164647265737320616c726561647920757365640000000000000000000000006000830152602082019050919050565b612c8c81612fbf565b82525050565b6000602082019050612ca76000830184612af0565b92915050565b6000606082019050612cc26000830186612af0565b612ccf6020830185612af0565b612cdc6040830184612c83565b949350505050565b6000604082019050612cf96000830185612af0565b612d066020830184612c83565b9392505050565b6000602082019050612d226000830184612aff565b92915050565b6000604082019050612d3d6000830185612b0e565b612d4a6020830184612c83565b9392505050565b6000608082019050612d666000830187612b0e565b612d736020830186612c83565b612d806040830185612c83565b612d8d6060830184612c83565b95945050505050565b60006020820190508181036000830152612daf81612b1d565b9050919050565b60006020820190508181036000830152612dcf81612b83565b9050919050565b60006020820190508181036000830152612def81612bc3565b9050919050565b60006020820190508181036000830152612e0f81612c03565b9050919050565b60006020820190508181036000830152612e2f81612c43565b9050919050565b6000602082019050612e4b6000830184612c83565b92915050565b600082825260208201905092915050565b6000612e6d82612fbf565b9150612e7883612fbf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612ead57612eac613012565b5b828201905092915050565b6000612ec382612fbf565b9150612ece83612fbf565b925082612ede57612edd613041565b5b828204905092915050565b6000612ef482612fbf565b9150612eff83612fbf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612f3857612f37613012565b5b828202905092915050565b6000612f4e82612fbf565b9150612f5983612fbf565b925082821015612f6c57612f6b613012565b5b828203905092915050565b6000612f8282612f9f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612fd482612fbf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561300757613006613012565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61307981612f77565b811461308457600080fd5b50565b61309081612f89565b811461309b57600080fd5b50565b6130a781612f95565b81146130b257600080fd5b50565b6130be81612fbf565b81146130c957600080fd5b5056fea2646970667358221220561fb74f2b9681ff377fe5fc86336a583585d1c5ca16c057c5b62b7b389684ef64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "115:5511:2:-:0;;;321:4:3;296:29;;;;;;;;;;;;;;;;;;;;436:6;409:33;;553:3;515:41;;625:2;589:38;;969:4;947:26;;;;;;;;;;;;;;;;;;;;1004:4;979:29;;;;;;;;;;;;;;;;;;;;1065:4;1034:35;;1239:42;1201:82;;;;;;;;;;;;;;;;;;;;2115:24;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2092:47;;;;;;;;;;;;;;;;;;;;2173:2;2145:30;;115:5511:2;;;;;;;;;;;;;;;;;;;;:::o;7:309:9:-;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;267:13;263:1;258:3;254:11;247:34;307:2;302:3;298:12;291:19;;153:163;;;:::o;322:419::-;;526:2;515:9;511:18;503:26;;575:9;569:4;565:20;561:1;550:9;546:17;539:47;603:131;729:4;603:131;:::i;:::-;595:139;;493:248;;;:::o;747:169::-;;865:6;860:3;853:19;905:4;900:3;896:14;881:29;;843:73;;;;:::o;115:5511:2:-;;;;;;;",
  "deployedSourceMap": "115:5511:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2967:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;245:45:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;220:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5431:213:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4640:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6751:155;;;:::i;:::-;;411:1169:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2811:48:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3015:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3087:614;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1551:1183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1118:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2918:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4739:99:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6495:250;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2865:47:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2967:42;;;;;;;;;;;;;;;;;:::o;245:45:3:-;279:11;245:45;:::o;220:19::-;;;;:::o;5431:213:0:-;5472:7;5526:1;5499:28;;:11;:23;5511:10;5499:23;;;;;;;;;;;;;;;;:28;;5491:37;;;;;;5538:22;5563:11;:23;5575:10;5563:23;;;;;;;;;;;;;;;;5538:48;;5603:34;5622:14;5603:18;:34::i;:::-;5596:41;;;5431:213;:::o;4640:93:3:-;4689:4;4712:14;;;;;;;;;;;4705:21;;4640:93;:::o;6751:155::-;:::o;411:1169:0:-;571:27;:25;:27::i;:::-;563:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;664:1;637:28;;:11;:23;649:10;637:23;;;;;;;;;;;;;;;;:28;629:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;895:23;:37;919:12;895:37;;;;;;;;;;;;;;;;;;;;;894:38;:83;;;;;937:26;:40;964:12;937:40;;;;;;;;;;;;;;;;;;;;;936:41;894:83;886:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;1033:12;1007:11;:23;1019:10;1007:23;;;;;;;;;;;;;;;:38;;;;1083:10;1055:11;:25;1067:12;1055:25;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1103:16;1131:14;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1122:8;:44;;;;:::i;:::-;1103:63;;1176:15;1205:14;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1194:8;:46;;;;:::i;:::-;1176:64;;1332:13;;;;;;;;;;;:26;;;1359:10;1379:4;1386:7;1332:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1404:70;1428:12;1442:7;1451:4;1457;1463:10;1404:23;:70::i;:::-;1484:36;1499:10;1511:8;1484:14;:36::i;:::-;1535:38;1550:12;1564:8;1535:38;;;;;;;:::i;:::-;;;;;;;;411:1169;;;;:::o;2811:48:2:-;;;;;;;;;;;;;;;;;:::o;3015:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;3087:614::-;3216:1;3189:28;;:11;:23;3201:10;3189:23;;;;;;;;;;;;;;;;:28;;3181:37;;;;;;3325:11;:23;3337:10;3325:23;;;;;;;;;;;;;;;;3309:12;:39;3301:48;;;;;;3395:5;3367:33;;:10;:24;3378:12;3367:24;;;;;;;;;;;;;;;;;;;;;:33;;;3359:42;;;;;;3438:4;3411:10;:24;3422:12;3411:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;3569:40;3596:12;3569:26;:40::i;:::-;3087:614;:::o;1551:1183::-;1679:30;:28;:30::i;:::-;1671:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1836:1;1809:28;;:11;:23;1821:10;1809:23;;;;;;;;;;;;;;;;:28;1801:37;;;;;;1999:23;:37;2023:12;1999:37;;;;;;;;;;;;;;;;;;;;;1998:38;:83;;;;;2041:26;:40;2068:12;2041:40;;;;;;;;;;;;;;;;;;;;;2040:41;1998:83;1990:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;2136:12;2110:11;:23;2122:10;2110:23;;;;;;;;;;;;;;;:38;;;;2186:10;2158:11;:25;2170:12;2158:25;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2238:50;;;;;;;;2250:13;2238:50;;;;2265:12;2238:50;;;;2279:8;2238:50;;;2206:15;:29;2222:12;2206:29;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;;;;;;;;;;2388:13;;;;;;;;;;;:26;;;2415:10;2435:4;2442:27;;2388:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2660:67;2675:12;2689:13;2704:12;2718:8;2660:67;;;;;;;;;:::i;:::-;;;;;;;;1551:1183;;;;:::o;1118:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2918:43::-;;;;;;;;;;;;;;;;;:::o;4739:99:3:-;4791:4;4814:17;;;;;;;;;;;4807:24;;4739:99;:::o;6495:250::-;6531:7;6550:12;279:11;6584:4;;6566:15;:22;;;;:::i;:::-;6565:36;;6550:51;;6614:7;:19;;;;;6625:8;;;;;;;;;;;6614:19;6611:88;;;6656:1;6649:4;:8;;;;6671:17;:15;:17::i;:::-;6611:88;6734:4;;6716:15;:22;;;;:::i;:::-;6709:29;;;6495:250;:::o;2865:47:2:-;;;;;;;;;;;;;;;;;:::o;4522:112:3:-;4582:7;4608:9;:19;4618:8;4608:19;;;;;;;;;;;;4601:26;;4522:112;;;:::o;2457:1622::-;2619:1;2588:33;;:9;:19;2598:8;2588:19;;;;;;;;;;;;;;;;;;;;;:33;;;:66;;;;2648:6;2625:29;;:9;:19;2635:8;2625:19;;;;;;;;;;;;;;;;;;;;;:29;;;2588:66;2580:75;;;;;;2669:8;:37;;;;;2682:14;:24;2697:8;2682:24;;;;;;;;;;;;;;;;;;;;;2681:25;2669:37;2665:139;;;2722:11;2739:8;2722:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2789:4;2762:14;:24;2777:8;2762:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2665:139;2817:8;2813:1172;;;2854:1;2845:6;:10;2841:662;;;2875:12;2910:4;2901:6;2890:8;;:17;;;;:::i;:::-;:24;;;;:::i;:::-;2875:39;;2932:14;2958:5;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2949:6;:35;;;;:::i;:::-;2932:52;;3012:4;3002:14;;;;;:::i;:::-;;;3042:8;:49;;;;3090:1;3080:6;3054:5;;;;;;;;;;;:15;;;3070:6;3054:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;;;;:::i;:::-;:37;;3042:49;3034:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;3151:8;3147:342;;;3196:4;3183:9;;:17;;;;;;;:::i;:::-;;;;;;;;3248:4;3222:12;:22;3235:8;3222:22;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;3274:21;3280:6;3288;3274:5;:21::i;:::-;3147:342;;;3371:4;3358:9;;:17;;;;;;;:::i;:::-;;;;;;;;3423:4;3397:12;:22;3410:8;3397:22;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;3449:21;3455:6;3463;3449:5;:21::i;:::-;3147:342;2841:662;;;2813:1172;;;3542:17;:27;3560:8;3542:27;;;;;;;;;;;;;;;;;;;;;3541:28;3533:37;;;;;;3584:14;3604:8;3584:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3657:4;3627:17;:27;3645:8;3627:27;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3684:1;3675:10;;2813:1172;4016:6;3994:9;:19;4004:8;3994:19;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;4032:40;4045:8;4055:6;4063:8;4032:12;:40::i;:::-;2457:1622;;;;;:::o;6912:96::-;6976:5;;;;;;;;;;;:11;;;6988:4;6994:6;6976:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6912:96;;:::o;1590:2036:0:-;1732:24;1759:20;;1732:47;;1789:17;1830:14;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1809:20;;:49;;;;:::i;:::-;1789:69;;1934:24;1977:6;1972:1009;1993:20;:27;;;;1989:1;:31;1972:1009;;;2041:18;2062:20;2083:1;2062:23;;;;;;;;;;;;;;;;;;;;;;;;2041:44;;2150:14;;;;;;;;;;;:24;;;2175:11;:27;2187:11;2199:1;2187:14;;;;;;;;;;;;;;;;;;;;;;;;2175:27;;;;;;;;;;;;;;;;;;;;;2150:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2140:9;:63;;;;:::i;:::-;2103:21;:33;2125:10;2103:33;;;;;;;;;;;;:100;2099:872;;2223:109;2245:11;2257:1;2245:14;;;;;;;;;;;;;;;;;;;;;;;;2271;;;;;;;;;;;:24;;;2296:11;:27;2308:11;2320:1;2308:14;;;;;;;;;;;;;;;;;;;;;;;;2296:27;;;;;;;;;;;;;;;;;;;;;2271:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2261:9;:63;;;;:::i;:::-;2326:5;2223:21;:109::i;:::-;2397:14;;;;;;;;;;;:24;;;2422:11;:27;2434:11;2446:1;2434:14;;;;;;;;;;;;;;;;;;;;;;;;2422:27;;;;;;;;;;;;;;;;;;;;;2397:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2387:9;:63;;;;:::i;:::-;2350:21;:33;2372:10;2350:33;;;;;;;;;;;;:100;;;;;;;:::i;:::-;;;;;;;;2498:14;;;;;;;;;;;:24;;;2523:11;:27;2535:11;2547:1;2535:14;;;;;;;;;;;;;;;;;;;;;;;;2523:27;;;;;;;;;;;;;;;;;;;;;2498:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2488:9;:63;;;;:::i;:::-;2468:83;;;;;:::i;:::-;;;2589:21;:33;2611:10;2589:33;;;;;;;;;;;;2569:53;;;;;:::i;:::-;;;2099:872;;;2700:1;2664:21;:33;2686:10;2664:33;;;;;;;;;;;;:37;2660:297;;;2725:79;2747:11;2759:1;2747:14;;;;;;;;;;;;;;;;;;;;;;;;2763:21;:33;2785:10;2763:33;;;;;;;;;;;;2798:5;2725:21;:79::i;:::-;2862:1;2826:21;:33;2848:10;2826:33;;;;;;;;;;;:37;;;;2905:21;:33;2927:10;2905:33;;;;;;;;;;;;2885:53;;;;;:::i;:::-;;;2660:297;2099:872;1972:1009;2022:3;;;;;:::i;:::-;;;;1972:1009;;;;3014:16;2994;:36;2990:557;;3051:6;3046:138;3067:20;:27;;;;3063:1;:31;3046:138;;;3168:1;3119:21;:46;3141:20;3162:1;3141:23;;;;;;;;;;;;;;;;;;;;;;;;3119:46;;;;;;;;;;;:50;;;;3096:3;;;;;:::i;:::-;;;;3046:138;;;;3197:68;3241:16;3222;:35;;;;:::i;:::-;3259:5;3197:24;:68::i;:::-;2990:557;;;3300:6;3295:242;3316:20;:27;;;;3312:1;:31;3295:242;;;3506:16;3486;3467;:35;;;;:::i;:::-;3417:21;:46;3439:20;3460:1;3439:23;;;;;;;;;;;;;;;;;;;;;;;;3417:46;;;;;;;;;;;;:86;;;;:::i;:::-;:105;;;;:::i;:::-;3368:21;:46;3390:20;3411:1;3390:23;;;;;;;;;;;;;;;;;;;;;;;;3368:46;;;;;;;;;;;:154;;;;3345:3;;;;;:::i;:::-;;;;3295:242;;;;2990:557;3556:63;3578:12;3592:20;;3614:4;3556:21;:63::i;:::-;1590:2036;;;;:::o;5153:1336:3:-;5294:13;:11;:13::i;:::-;5322:9;5317:612;5341:11;:18;;;;5337:1;:22;5317:612;;;5380:13;5396:25;5406:11;5418:1;5406:14;;;;;;;;;;;;;;;;;;;;;;;;5396:9;:25::i;:::-;5380:41;;5452:1;5443:5;:10;;5435:19;;;;;;5480:1;5472:5;:9;5468:95;;;5501:4;;;;;;;;;;;:13;;;5515:9;:25;5525:11;5537:1;5525:14;;;;;;;;;;;;;;;;;;;;;;;;5515:25;;;;;;;;;;;;;;;;;;;;;5542:5;5501:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5468:95;5604:1;5576:9;:25;5586:11;5598:1;5586:14;;;;;;;;;;;;;;;;;;;;;;;;5576:25;;;;;;;;;;;:29;;;;5619:16;5638:9;:25;5648:11;5660:1;5648:14;;;;;;;;;;;;;;;;;;;;;;;;5638:25;;;;;;;;;;;;;;;;;;;;;5619:44;;5677:20;5700:5;;;;;;;;;;;:15;;;5716:8;5700:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5677:48;;5739:29;5745:8;5755:12;5739:5;:29::i;:::-;5818:1;5782:9;:25;5792:11;5804:1;5792:14;;;;;;;;;;;;;;;;;;;;;;;;5782:25;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;5867:5;5834:14;:30;5849:11;5861:1;5849:14;;;;;;;;;;;;;;;;;;;;;;;;5834:30;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;5917:1;5886:12;:28;5899:11;5911:1;5899:14;;;;;;;;;;;;;;;;;;;;;;;;5886:28;;;;;;;;;;;:32;;;;5317:612;;;5361:3;;;;;:::i;:::-;;;;5317:612;;;;5945:11;;5938:18;;;;:::i;:::-;5972:9;5967:419;5991:14;:21;;;;5987:1;:25;5967:419;;;6037:10;:29;6048:14;6063:1;6048:17;;;;;;;;;;;;;;;;;;;;;;;;6037:29;;;;;;;;;;;;;;;;;;;;;6033:133;;;6086:4;;;;;;;;;;;:13;;;6100:9;:28;6110:14;6125:1;6110:17;;;;;;;;;;;;;;;;;;;;;;;;6100:28;;;;;;;;;;;;;;;;;;;;;6130:20;;6086:65;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6033:133;6210:1;6179:9;:28;6189:14;6204:1;6189:17;;;;;;;;;;;;;;;;;;;;;;;;6179:28;;;;;;;;;;;:32;;;;6264:1;6225:9;:28;6235:14;6250:1;6235:17;;;;;;;;;;;;;;;;;;;;;;;;6225:28;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;6319:5;6280:17;:36;6298:14;6313:1;6298:17;;;;;;;;;;;;;;;;;;;;;;;;6280:36;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;6370:5;6338:10;:29;6349:14;6364:1;6349:17;;;;;;;;;;;;;;;;;;;;;;;;6338:29;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6014:3;;;;;:::i;:::-;;;;5967:419;;;;6402:14;;6395:21;;;;:::i;:::-;6444:4;6427:14;;:21;;;;;;;;;;;;;;;;;;6478:4;6458:17;;:24;;;;;;;;;;;;;;;;;;5153:1336::o;7014:96::-;7078:5;;;;;;;;;;;:11;;;7090:4;7096:6;7078:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7014:96;;:::o;4116:400::-;4210:8;4206:304;;;4238:17;:27;4256:8;4238:27;;;;;;;;;;;;;;;;;;;;;:42;;;;;4279:1;4269:6;:11;;4238:42;4234:156;;;4309:10;:20;4320:8;4309:20;;;;;;;;;;;;;;;;;;;;;4308:21;4300:30;;;;;;4371:4;4348:10;:20;4359:8;4348:20;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;4234:156;4426:6;4403:9;:19;4413:8;4403:19;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;4206:304;;;4493:6;4470:9;:19;4480:8;4470:19;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;4206:304;4116:400;;;:::o;7116:257::-;7196:8;7191:176;;7249:1;7239:6;7228:8;;:17;;;;:::i;:::-;:22;;7220:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;7302:6;7290:8;;:18;;;;;;;:::i;:::-;;;;;;;;7191:176;;;7350:6;7338:8;;:18;;;;;;;:::i;:::-;;;;;;;;7191:176;7116:257;;:::o;7428:593::-;7500:14;7583:16;;7562:11;:18;;;;:37;;;;:::i;:::-;7541:18;;7517:14;:21;;;;:42;;;;:::i;:::-;:82;;;;:::i;:::-;7500:99;;7614:9;7609:297;7633:11;:18;;;;7629:1;:22;7609:297;;;7743:23;7788:5;;;;;;;;;;;:15;;;7804:9;:25;7814:11;7826:1;7814:14;;;;;;;;;;;;;;;;;;;;;;;;7804:25;;;;;;;;;;;;;;;;;;;;;7788:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7769:16;;:61;;;;:::i;:::-;7743:87;;7844:51;7857:11;7869:1;7857:14;;;;;;;;;;;;;;;;;;;;;;;;7873:15;7890:4;7844:12;:51::i;:::-;7609:297;7653:3;;;;;:::i;:::-;;;;7609:297;;;;7933:1;7923:6;:11;;7915:20;;;;;;7958:1;7949:6;:10;7945:70;;;7975:29;7991:6;7999:4;7975:15;:29::i;:::-;7945:70;7428:593;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:139:9:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:139::-;;524:6;511:20;502:29;;540:33;567:5;540:33;:::i;:::-;492:87;;;;:::o;585:143::-;;673:6;667:13;658:22;;689:33;716:5;689:33;:::i;:::-;648:80;;;;:::o;734:262::-;;842:2;830:9;821:7;817:23;813:32;810:2;;;858:1;855;848:12;810:2;901:1;926:53;971:7;962:6;951:9;947:22;926:53;:::i;:::-;916:63;;872:117;800:196;;;;:::o;1002:278::-;;1118:2;1106:9;1097:7;1093:23;1089:32;1086:2;;;1134:1;1131;1124:12;1086:2;1177:1;1202:61;1255:7;1246:6;1235:9;1231:22;1202:61;:::i;:::-;1192:71;;1148:125;1076:204;;;;:::o;1286:262::-;;1394:2;1382:9;1373:7;1369:23;1365:32;1362:2;;;1410:1;1407;1400:12;1362:2;1453:1;1478:53;1523:7;1514:6;1503:9;1499:22;1478:53;:::i;:::-;1468:63;;1424:117;1352:196;;;;:::o;1554:262::-;;1662:2;1650:9;1641:7;1637:23;1633:32;1630:2;;;1678:1;1675;1668:12;1630:2;1721:1;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1692:117;1620:196;;;;:::o;1822:284::-;;1941:2;1929:9;1920:7;1916:23;1912:32;1909:2;;;1957:1;1954;1947:12;1909:2;2000:1;2025:64;2081:7;2072:6;2061:9;2057:22;2025:64;:::i;:::-;2015:74;;1971:128;1899:207;;;;:::o;2112:407::-;;;2237:2;2225:9;2216:7;2212:23;2208:32;2205:2;;;2253:1;2250;2243:12;2205:2;2296:1;2321:53;2366:7;2357:6;2346:9;2342:22;2321:53;:::i;:::-;2311:63;;2267:117;2423:2;2449:53;2494:7;2485:6;2474:9;2470:22;2449:53;:::i;:::-;2439:63;;2394:118;2195:324;;;;;:::o;2525:698::-;;;;;2684:3;2672:9;2663:7;2659:23;2655:33;2652:2;;;2701:1;2698;2691:12;2652:2;2744:1;2769:53;2814:7;2805:6;2794:9;2790:22;2769:53;:::i;:::-;2759:63;;2715:117;2871:2;2897:53;2942:7;2933:6;2922:9;2918:22;2897:53;:::i;:::-;2887:63;;2842:118;2999:2;3025:53;3070:7;3061:6;3050:9;3046:22;3025:53;:::i;:::-;3015:63;;2970:118;3127:2;3153:53;3198:7;3189:6;3178:9;3174:22;3153:53;:::i;:::-;3143:63;;3098:118;2642:581;;;;;;;:::o;3229:118::-;3316:24;3334:5;3316:24;:::i;:::-;3311:3;3304:37;3294:53;;:::o;3353:109::-;3434:21;3449:5;3434:21;:::i;:::-;3429:3;3422:34;3412:50;;:::o;3468:118::-;3555:24;3573:5;3555:24;:::i;:::-;3550:3;3543:37;3533:53;;:::o;3592:365::-;;3755:67;3819:2;3814:3;3755:67;:::i;:::-;3748:74;;3852:34;3848:1;3843:3;3839:11;3832:55;3918:3;3913:2;3908:3;3904:12;3897:25;3948:2;3943:3;3939:12;3932:19;;3738:219;;;:::o;3963:312::-;;4126:67;4190:2;4185:3;4126:67;:::i;:::-;4119:74;;4223:16;4219:1;4214:3;4210:11;4203:37;4266:2;4261:3;4257:12;4250:19;;4109:166;;;:::o;4281:314::-;;4444:67;4508:2;4503:3;4444:67;:::i;:::-;4437:74;;4541:18;4537:1;4532:3;4528:11;4521:39;4586:2;4581:3;4577:12;4570:19;;4427:168;;;:::o;4601:319::-;;4764:67;4828:2;4823:3;4764:67;:::i;:::-;4757:74;;4861:23;4857:1;4852:3;4848:11;4841:44;4911:2;4906:3;4902:12;4895:19;;4747:173;;;:::o;4926:318::-;;5089:67;5153:2;5148:3;5089:67;:::i;:::-;5082:74;;5186:22;5182:1;5177:3;5173:11;5166:43;5235:2;5230:3;5226:12;5219:19;;5072:172;;;:::o;5250:118::-;5337:24;5355:5;5337:24;:::i;:::-;5332:3;5325:37;5315:53;;:::o;5374:222::-;;5505:2;5494:9;5490:18;5482:26;;5518:71;5586:1;5575:9;5571:17;5562:6;5518:71;:::i;:::-;5472:124;;;;:::o;5602:442::-;;5789:2;5778:9;5774:18;5766:26;;5802:71;5870:1;5859:9;5855:17;5846:6;5802:71;:::i;:::-;5883:72;5951:2;5940:9;5936:18;5927:6;5883:72;:::i;:::-;5965;6033:2;6022:9;6018:18;6009:6;5965:72;:::i;:::-;5756:288;;;;;;:::o;6050:332::-;;6209:2;6198:9;6194:18;6186:26;;6222:71;6290:1;6279:9;6275:17;6266:6;6222:71;:::i;:::-;6303:72;6371:2;6360:9;6356:18;6347:6;6303:72;:::i;:::-;6176:206;;;;;:::o;6388:210::-;;6513:2;6502:9;6498:18;6490:26;;6526:65;6588:1;6577:9;6573:17;6564:6;6526:65;:::i;:::-;6480:118;;;;:::o;6604:332::-;;6763:2;6752:9;6748:18;6740:26;;6776:71;6844:1;6833:9;6829:17;6820:6;6776:71;:::i;:::-;6857:72;6925:2;6914:9;6910:18;6901:6;6857:72;:::i;:::-;6730:206;;;;;:::o;6942:553::-;;7157:3;7146:9;7142:19;7134:27;;7171:71;7239:1;7228:9;7224:17;7215:6;7171:71;:::i;:::-;7252:72;7320:2;7309:9;7305:18;7296:6;7252:72;:::i;:::-;7334;7402:2;7391:9;7387:18;7378:6;7334:72;:::i;:::-;7416;7484:2;7473:9;7469:18;7460:6;7416:72;:::i;:::-;7124:371;;;;;;;:::o;7501:419::-;;7705:2;7694:9;7690:18;7682:26;;7754:9;7748:4;7744:20;7740:1;7729:9;7725:17;7718:47;7782:131;7908:4;7782:131;:::i;:::-;7774:139;;7672:248;;;:::o;7926:419::-;;8130:2;8119:9;8115:18;8107:26;;8179:9;8173:4;8169:20;8165:1;8154:9;8150:17;8143:47;8207:131;8333:4;8207:131;:::i;:::-;8199:139;;8097:248;;;:::o;8351:419::-;;8555:2;8544:9;8540:18;8532:26;;8604:9;8598:4;8594:20;8590:1;8579:9;8575:17;8568:47;8632:131;8758:4;8632:131;:::i;:::-;8624:139;;8522:248;;;:::o;8776:419::-;;8980:2;8969:9;8965:18;8957:26;;9029:9;9023:4;9019:20;9015:1;9004:9;9000:17;8993:47;9057:131;9183:4;9057:131;:::i;:::-;9049:139;;8947:248;;;:::o;9201:419::-;;9405:2;9394:9;9390:18;9382:26;;9454:9;9448:4;9444:20;9440:1;9429:9;9425:17;9418:47;9482:131;9608:4;9482:131;:::i;:::-;9474:139;;9372:248;;;:::o;9626:222::-;;9757:2;9746:9;9742:18;9734:26;;9770:71;9838:1;9827:9;9823:17;9814:6;9770:71;:::i;:::-;9724:124;;;;:::o;9854:169::-;;9972:6;9967:3;9960:19;10012:4;10007:3;10003:14;9988:29;;9950:73;;;;:::o;10029:305::-;;10088:20;10106:1;10088:20;:::i;:::-;10083:25;;10122:20;10140:1;10122:20;:::i;:::-;10117:25;;10276:1;10208:66;10204:74;10201:1;10198:81;10195:2;;;10282:18;;:::i;:::-;10195:2;10326:1;10323;10319:9;10312:16;;10073:261;;;;:::o;10340:185::-;;10397:20;10415:1;10397:20;:::i;:::-;10392:25;;10431:20;10449:1;10431:20;:::i;:::-;10426:25;;10470:1;10460:2;;10475:18;;:::i;:::-;10460:2;10517:1;10514;10510:9;10505:14;;10382:143;;;;:::o;10531:348::-;;10594:20;10612:1;10594:20;:::i;:::-;10589:25;;10628:20;10646:1;10628:20;:::i;:::-;10623:25;;10816:1;10748:66;10744:74;10741:1;10738:81;10733:1;10726:9;10719:17;10715:105;10712:2;;;10823:18;;:::i;:::-;10712:2;10871:1;10868;10864:9;10853:20;;10579:300;;;;:::o;10885:191::-;;10945:20;10963:1;10945:20;:::i;:::-;10940:25;;10979:20;10997:1;10979:20;:::i;:::-;10974:25;;11018:1;11015;11012:8;11009:2;;;11023:18;;:::i;:::-;11009:2;11068:1;11065;11061:9;11053:17;;10930:146;;;;:::o;11082:96::-;;11148:24;11166:5;11148:24;:::i;:::-;11137:35;;11127:51;;;:::o;11184:90::-;;11261:5;11254:13;11247:21;11236:32;;11226:48;;;:::o;11280:77::-;;11346:5;11335:16;;11325:32;;;:::o;11363:126::-;;11440:42;11433:5;11429:54;11418:65;;11408:81;;;:::o;11495:77::-;;11561:5;11550:16;;11540:32;;;:::o;11578:233::-;;11640:24;11658:5;11640:24;:::i;:::-;11631:33;;11686:66;11679:5;11676:77;11673:2;;;11756:18;;:::i;:::-;11673:2;11803:1;11796:5;11792:13;11785:20;;11621:190;;;:::o;11817:180::-;11865:77;11862:1;11855:88;11962:4;11959:1;11952:15;11986:4;11983:1;11976:15;12003:180;12051:77;12048:1;12041:88;12148:4;12145:1;12138:15;12172:4;12169:1;12162:15;12189:122;12262:24;12280:5;12262:24;:::i;:::-;12255:5;12252:35;12242:2;;12301:1;12298;12291:12;12242:2;12232:79;:::o;12317:116::-;12387:21;12402:5;12387:21;:::i;:::-;12380:5;12377:32;12367:2;;12423:1;12420;12413:12;12367:2;12357:76;:::o;12439:122::-;12512:24;12530:5;12512:24;:::i;:::-;12505:5;12502:35;12492:2;;12551:1;12548;12541:12;12492:2;12482:79;:::o;12567:122::-;12640:24;12658:5;12640:24;:::i;:::-;12633:5;12630:35;12620:2;;12679:1;12676;12669:12;12620:2;12610:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\nimport \"./Platform.sol\";\nimport \"./InvestorFactory.sol\";\n\ncontract ParticipantFactory is InvestorFactory {\n\n    /*\n        1.) How do claims work? How does the information come in?\n        2.) If there are multiple claims per participant we should \n        have an array storing the claims or have another \n        contract for the claims info\n        3.) All investors in a participant's claim don't get same premium\n        because of the high risk, high reward attribute the participant \n        who has the claim should have the list of investors to determine \n        how much to pay\n            a.) The participant should have access to their investors\n    */\n\n    struct Participant {\n        uint coverageSize;\n        uint premium; //participant premium to investors\n        uint profit;\n        // uint totalInvestor;\n    }\n\n    struct Payments {\n        address investorAddress;\n        uint256 paymentToInvestor;\n        //Claim if we make contract for claims\n    }\n\n\n    //all participants on platform\n    // Participant[] public participants;\n    Payments[] public payments;\n    // bytes32[] public particpantsIds;\n    mapping (bytes32 => Participant) idToParticipant;\n    // address[] public participantAddresses;\n    \n    //address\n    mapping (address => bytes32) addresstoId; //for platform\n    // mapping (bytes32 => address) idToAddress; //from platform to Participant\n\n    event newParticipant(bytes32 hashUsername, uint coverageSize, uint totalClaims, uint premium);\n\n    function createParticipant(uint _coverageSize, uint _totalClaims, uint _premium, bytes32 hashUsername) public {\n        require(Platform._getParticipantOpen(), \"currently closed\");\n        //hashing is done here (need to check if this works)\n        require(addresstoId[msg.sender] == 0);\n        // bytes32 hashUsername = keccak256(abi.encode(username));\n        // require(hashUsername !=Platform.platform_id, \"Username taken\");\n        require(!Platform.investorExists[hashUsername] && !Platform.participantExists[hashUsername], \"Username taken\");\n        addresstoId[msg.sender] = hashUsername;\n        idToAddress[hashUsername] = msg.sender;\n        idToParticipant[hashUsername] = Participant(_coverageSize, _totalClaims, _premium);\n        // usdt.approve(address(this), Platform.premium); //GET ACTUAL APPROVAL MECHANISM\n        Platform.usdt.transferFrom(msg.sender, address(this), Platform.participantPremium);\n        // participantAddresses[hashUsername] = Participant(0, 0);\n        // Platform._initiateValue(hashUsername, _value, false, false, msg.sender); don't know what this is\n        emit newParticipant(hashUsername, _coverageSize, _totalClaims, _premium);\n    }\n\n    //mapping for values which can all be accessible from the platform\n    mapping (address => uint) public mapCoverageSize;\n    mapping (address => uint) public mapTotalClaims;\n    mapping (address => uint) public mapPremium;\n    mapping (address => uint) public mapProfit;\n    mapping (address => bool) public mapOpen;\n\n    //register the claim\n    function registerClaim(bytes32 hashUsername/* string memory claimUsername*/) public {\n        require(addresstoId[msg.sender] != 0);\n        // string memory hashUsername = keccak256(abi.encode(username));\n        require(hashUsername == addresstoId[msg.sender]);\n        require(hasClaimed[hashUsername] == false);\n        hasClaimed[hashUsername] = true;\n        // Participant storage myParticipant = participantAddresses[hashUsername]; //storage means pass by reference\n        InvestorFactory.splitClaim(hashUsername);\n        // if there is a claim username we would want to push that into claims array\n    }\n\n    // //puts investor into array\n    // function _updateInvestors(string memory _username) public {\n        // //make an array above and push the investors in \n        // //hashes and pushes username\n        // //haven't decided how to store yet\n    // }\n\n\n    // do we need all of this, see _payPremium in the platforms.sol\n    // only done at end so sophistication isn't needed\n\n\n    //// payment related attributes and functions\n    // mapping (address => bytes32) public addressToPaymentId;\n    // mapping (bytes32 => address) public paymentIdToAddress;\n    // event newPayment(address _participantId, address _paymentId);  \n\n    // //make a payment\n    // function createPayment(address _participantId, address _paymentId) public {\n        // payments.push(Payment(_participantId, _paymentId));\n\n        // /*\n        // need to figure out how to hash address to bytes32 \n        // (make sure whether or not we want to do this or not) \n        // */\n\n        // emit newPayment(address _participantId, address _paymentId);\n    // }\n\n    // //makes payment\n    // mapping (address => uint) public investorPayments;\n\n    // function calculatePayment() public returns(uint){\n        // for(int i = 0; i < payments.length; i++) {\n            // //run the math for now, currently we have the payments the same\n            // //run payment updater TBD how to do, price amount varies\n        // }\n    // }\n\n\n    \n    // contract PaymentMade {\n        // mapping (address => uint) public payments;\n\n        // function updatePayment(uint newBalance) public {\n            // balances[msg.sender] = newBalance;\n        // }\n    // }\n\n    // contract PaymentUpdater {\n        // function updatePayment(uint _amount) public returns (uint) {\n            // PaymentMade pay = new PaymentMade();\n            // PaymentMade.updatePayment(_amount);\n            // return PaymentMade.payments(address(this));\n        // }\n    // }\n\n\n}\n\n\n\n",
  "sourcePath": "/Users/praneet/college/others/RiskSmartContract/contracts/Participant.sol",
  "ast": {
    "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/Participant.sol",
    "exportedSymbols": {
      "IERC20": [
        2519
      ],
      "InvestorFactory": [
        587
      ],
      "ParticipantFactory": [
        815
      ],
      "Platform": [
        1531
      ],
      "Token": [
        1997
      ]
    },
    "id": 816,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 622,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:2"
      },
      {
        "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/Platform.sol",
        "file": "./Platform.sol",
        "id": 623,
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 1532,
        "src": "57:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/InvestorFactory.sol",
        "file": "./InvestorFactory.sol",
        "id": 624,
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 588,
        "src": "82:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 625,
              "name": "InvestorFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 587,
              "src": "146:15:2"
            },
            "id": 626,
            "nodeType": "InheritanceSpecifier",
            "src": "146:15:2"
          }
        ],
        "contractDependencies": [
          587,
          1531
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 815,
        "linearizedBaseContracts": [
          815,
          587,
          1531
        ],
        "name": "ParticipantFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ParticipantFactory.Participant",
            "id": 633,
            "members": [
              {
                "constant": false,
                "id": 628,
                "mutability": "mutable",
                "name": "coverageSize",
                "nodeType": "VariableDeclaration",
                "scope": 633,
                "src": "757:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 627,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "757:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 630,
                "mutability": "mutable",
                "name": "premium",
                "nodeType": "VariableDeclaration",
                "scope": 633,
                "src": "784:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 629,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "784:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 632,
                "mutability": "mutable",
                "name": "profit",
                "nodeType": "VariableDeclaration",
                "scope": 633,
                "src": "841:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 631,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "841:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Participant",
            "nodeType": "StructDefinition",
            "scope": 815,
            "src": "728:162:2",
            "visibility": "public"
          },
          {
            "canonicalName": "ParticipantFactory.Payments",
            "id": 638,
            "members": [
              {
                "constant": false,
                "id": 635,
                "mutability": "mutable",
                "name": "investorAddress",
                "nodeType": "VariableDeclaration",
                "scope": 638,
                "src": "922:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 634,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "922:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 637,
                "mutability": "mutable",
                "name": "paymentToInvestor",
                "nodeType": "VariableDeclaration",
                "scope": 638,
                "src": "955:25:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 636,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "955:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payments",
            "nodeType": "StructDefinition",
            "scope": 815,
            "src": "896:138:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87d81789",
            "id": 642,
            "mutability": "mutable",
            "name": "payments",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1118:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Payments_$638_storage_$dyn_storage",
              "typeString": "struct ParticipantFactory.Payments[]"
            },
            "typeName": {
              "baseType": {
                "id": 640,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 639,
                  "name": "Payments",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 638,
                  "src": "1118:8:2"
                },
                "referencedDeclaration": 638,
                "src": "1118:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Payments_$638_storage_ptr",
                  "typeString": "struct ParticipantFactory.Payments"
                }
              },
              "id": 641,
              "nodeType": "ArrayTypeName",
              "src": "1118:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Payments_$638_storage_$dyn_storage_ptr",
                "typeString": "struct ParticipantFactory.Payments[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 647,
            "mutability": "mutable",
            "name": "idToParticipant",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1190:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Participant_$633_storage_$",
              "typeString": "mapping(bytes32 => struct ParticipantFactory.Participant)"
            },
            "typeName": {
              "id": 646,
              "keyType": {
                "id": 643,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1199:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1190:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Participant_$633_storage_$",
                "typeString": "mapping(bytes32 => struct ParticipantFactory.Participant)"
              },
              "valueType": {
                "id": 645,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 644,
                  "name": "Participant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 633,
                  "src": "1210:11:2"
                },
                "referencedDeclaration": 633,
                "src": "1210:11:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Participant_$633_storage_ptr",
                  "typeString": "struct ParticipantFactory.Participant"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 651,
            "mutability": "mutable",
            "name": "addresstoId",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1309:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 650,
              "keyType": {
                "id": 648,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1318:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1309:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 649,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1329:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 661,
            "name": "newParticipant",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hashUsername",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1472:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 655,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "coverageSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1494:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 657,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalClaims",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1513:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 659,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1531:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1471:73:2"
            },
            "src": "1451:94:2"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "1661:1073:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 673,
                            "name": "Platform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1531,
                            "src": "1679:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                              "typeString": "type(contract Platform)"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_getParticipantOpen",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1148,
                          "src": "1679:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1679:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63757272656e746c7920636c6f736564",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1711:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87a225f317e4ea4aa0b5d74598a771ec1d7bf192ef5a04e5c661691de0cdab3b",
                          "typeString": "literal_string \"currently closed\""
                        },
                        "value": "currently closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87a225f317e4ea4aa0b5d74598a771ec1d7bf192ef5a04e5c661691de0cdab3b",
                          "typeString": "literal_string \"currently closed\""
                        }
                      ],
                      "id": 672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1671:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1671:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 680,
                            "name": "addresstoId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "1809:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 683,
                          "indexExpression": {
                            "expression": {
                              "id": 681,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1821:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1821:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1809:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1836:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1809:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1801:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 687,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1998:38:2",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 689,
                                "name": "Platform",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1531,
                                "src": "1999:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                                  "typeString": "type(contract Platform)"
                                }
                              },
                              "id": 690,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "investorExists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 883,
                              "src": "1999:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 692,
                            "indexExpression": {
                              "id": 691,
                              "name": "hashUsername",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "2023:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1999:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2040:41:2",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 694,
                                "name": "Platform",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1531,
                                "src": "2041:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                                  "typeString": "type(contract Platform)"
                                }
                              },
                              "id": 695,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "participantExists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 894,
                              "src": "2041:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 697,
                            "indexExpression": {
                              "id": 696,
                              "name": "hashUsername",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "2068:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2041:40:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1998:83:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "557365726e616d652074616b656e",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2083:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_525b0acae5419181202d3a63649bf6b4c3194135d048e233aaf44f6a6767e285",
                          "typeString": "literal_string \"Username taken\""
                        },
                        "value": "Username taken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_525b0acae5419181202d3a63649bf6b4c3194135d048e233aaf44f6a6767e285",
                          "typeString": "literal_string \"Username taken\""
                        }
                      ],
                      "id": 688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1990:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1990:110:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:110:2"
                },
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 703,
                        "name": "addresstoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "2110:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 706,
                      "indexExpression": {
                        "expression": {
                          "id": 704,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2122:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2122:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2110:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 707,
                      "name": "hashUsername",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "2136:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2110:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "2110:38:2"
                },
                {
                  "expression": {
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 710,
                        "name": "idToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2158:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 712,
                      "indexExpression": {
                        "id": 711,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "2170:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2158:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 713,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2186:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2186:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2158:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:38:2"
                },
                {
                  "expression": {
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 717,
                        "name": "idToParticipant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "2206:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Participant_$633_storage_$",
                          "typeString": "mapping(bytes32 => struct ParticipantFactory.Participant storage ref)"
                        }
                      },
                      "id": 719,
                      "indexExpression": {
                        "id": 718,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "2222:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2206:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participant_$633_storage",
                        "typeString": "struct ParticipantFactory.Participant storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 721,
                          "name": "_coverageSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 663,
                          "src": "2250:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 722,
                          "name": "_totalClaims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "2265:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 723,
                          "name": "_premium",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "2279:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 720,
                        "name": "Participant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "2238:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Participant_$633_storage_ptr_$",
                          "typeString": "type(struct ParticipantFactory.Participant storage pointer)"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2238:50:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participant_$633_memory_ptr",
                        "typeString": "struct ParticipantFactory.Participant memory"
                      }
                    },
                    "src": "2206:82:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Participant_$633_storage",
                      "typeString": "struct ParticipantFactory.Participant storage ref"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:82:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 732,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2415:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2415:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 736,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2435:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ParticipantFactory_$815",
                              "typeString": "contract ParticipantFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ParticipantFactory_$815",
                              "typeString": "contract ParticipantFactory"
                            }
                          ],
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2427:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 734,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2427:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2427:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 738,
                          "name": "Platform",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1531,
                          "src": "2442:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                            "typeString": "type(contract Platform)"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "participantPremium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 847,
                        "src": "2442:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 727,
                          "name": "Platform",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1531,
                          "src": "2388:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                            "typeString": "type(contract Platform)"
                          }
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "usdt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 872,
                        "src": "2388:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2519",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2500,
                      "src": "2388:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:82:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:82:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 743,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "2675:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 744,
                        "name": "_coverageSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "2689:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 745,
                        "name": "_totalClaims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "2704:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 746,
                        "name": "_premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "2718:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 742,
                      "name": "newParticipant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "2660:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,uint256)"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2660:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 748,
                  "nodeType": "EmitStatement",
                  "src": "2655:72:2"
                }
              ]
            },
            "functionSelector": "751dd486",
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createParticipant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "_coverageSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "1578:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "_totalClaims",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "1598:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "_premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "1617:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "hashUsername",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "1632:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1577:76:2"
            },
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1661:0:2"
            },
            "scope": 815,
            "src": "1551:1183:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a6e5237",
            "id": 754,
            "mutability": "mutable",
            "name": "mapCoverageSize",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2811:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 753,
              "keyType": {
                "id": 751,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2820:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2811:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 752,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2831:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffcba768",
            "id": 758,
            "mutability": "mutable",
            "name": "mapTotalClaims",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2865:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 757,
              "keyType": {
                "id": 755,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2874:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2865:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 756,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2885:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d9e06270",
            "id": 762,
            "mutability": "mutable",
            "name": "mapPremium",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2918:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 761,
              "keyType": {
                "id": 759,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2927:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2918:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 760,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2938:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "09097092",
            "id": 766,
            "mutability": "mutable",
            "name": "mapProfit",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2967:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 765,
              "keyType": {
                "id": 763,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2976:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2967:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 764,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2987:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "73a14b69",
            "id": 770,
            "mutability": "mutable",
            "name": "mapOpen",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "3015:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 769,
              "keyType": {
                "id": 767,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3024:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3015:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 768,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3035:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 813,
              "nodeType": "Block",
              "src": "3171:530:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 776,
                            "name": "addresstoId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "3189:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 779,
                          "indexExpression": {
                            "expression": {
                              "id": 777,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3201:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3201:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3189:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3216:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3189:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3181:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3181:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 785,
                          "name": "hashUsername",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "3309:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 786,
                            "name": "addresstoId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "3325:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 789,
                          "indexExpression": {
                            "expression": {
                              "id": 787,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3337:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3337:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3325:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3309:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 784,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3301:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3301:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "3301:48:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 794,
                            "name": "hasClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "3367:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 796,
                          "indexExpression": {
                            "id": 795,
                            "name": "hashUsername",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "3378:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3367:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3395:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3367:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 793,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3359:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "3359:42:2"
                },
                {
                  "expression": {
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 801,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "3411:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 803,
                      "indexExpression": {
                        "id": 802,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "3422:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3411:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3438:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3411:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "3411:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 810,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "3596:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 807,
                        "name": "InvestorFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "3569:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InvestorFactory_$587_$",
                          "typeString": "type(contract InvestorFactory)"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "splitClaim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 377,
                      "src": "3569:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3569:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "3569:40:2"
                }
              ]
            },
            "functionSelector": "7423b4d1",
            "id": 814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "hashUsername",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "3110:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:54:2"
            },
            "returnParameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3171:0:2"
            },
            "scope": 815,
            "src": "3087:614:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 816,
        "src": "115:5511:2"
      }
    ],
    "src": "32:5598:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/Participant.sol",
    "exportedSymbols": {
      "IERC20": [
        2519
      ],
      "InvestorFactory": [
        587
      ],
      "ParticipantFactory": [
        815
      ],
      "Platform": [
        1531
      ],
      "Token": [
        1997
      ]
    },
    "id": 816,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 622,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:2"
      },
      {
        "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/Platform.sol",
        "file": "./Platform.sol",
        "id": 623,
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 1532,
        "src": "57:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/InvestorFactory.sol",
        "file": "./InvestorFactory.sol",
        "id": 624,
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 588,
        "src": "82:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 625,
              "name": "InvestorFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 587,
              "src": "146:15:2"
            },
            "id": 626,
            "nodeType": "InheritanceSpecifier",
            "src": "146:15:2"
          }
        ],
        "contractDependencies": [
          587,
          1531
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 815,
        "linearizedBaseContracts": [
          815,
          587,
          1531
        ],
        "name": "ParticipantFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ParticipantFactory.Participant",
            "id": 633,
            "members": [
              {
                "constant": false,
                "id": 628,
                "mutability": "mutable",
                "name": "coverageSize",
                "nodeType": "VariableDeclaration",
                "scope": 633,
                "src": "757:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 627,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "757:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 630,
                "mutability": "mutable",
                "name": "premium",
                "nodeType": "VariableDeclaration",
                "scope": 633,
                "src": "784:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 629,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "784:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 632,
                "mutability": "mutable",
                "name": "profit",
                "nodeType": "VariableDeclaration",
                "scope": 633,
                "src": "841:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 631,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "841:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Participant",
            "nodeType": "StructDefinition",
            "scope": 815,
            "src": "728:162:2",
            "visibility": "public"
          },
          {
            "canonicalName": "ParticipantFactory.Payments",
            "id": 638,
            "members": [
              {
                "constant": false,
                "id": 635,
                "mutability": "mutable",
                "name": "investorAddress",
                "nodeType": "VariableDeclaration",
                "scope": 638,
                "src": "922:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 634,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "922:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 637,
                "mutability": "mutable",
                "name": "paymentToInvestor",
                "nodeType": "VariableDeclaration",
                "scope": 638,
                "src": "955:25:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 636,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "955:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payments",
            "nodeType": "StructDefinition",
            "scope": 815,
            "src": "896:138:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87d81789",
            "id": 642,
            "mutability": "mutable",
            "name": "payments",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1118:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Payments_$638_storage_$dyn_storage",
              "typeString": "struct ParticipantFactory.Payments[]"
            },
            "typeName": {
              "baseType": {
                "id": 640,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 639,
                  "name": "Payments",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 638,
                  "src": "1118:8:2"
                },
                "referencedDeclaration": 638,
                "src": "1118:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Payments_$638_storage_ptr",
                  "typeString": "struct ParticipantFactory.Payments"
                }
              },
              "id": 641,
              "nodeType": "ArrayTypeName",
              "src": "1118:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Payments_$638_storage_$dyn_storage_ptr",
                "typeString": "struct ParticipantFactory.Payments[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 647,
            "mutability": "mutable",
            "name": "idToParticipant",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1190:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Participant_$633_storage_$",
              "typeString": "mapping(bytes32 => struct ParticipantFactory.Participant)"
            },
            "typeName": {
              "id": 646,
              "keyType": {
                "id": 643,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1199:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1190:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Participant_$633_storage_$",
                "typeString": "mapping(bytes32 => struct ParticipantFactory.Participant)"
              },
              "valueType": {
                "id": 645,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 644,
                  "name": "Participant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 633,
                  "src": "1210:11:2"
                },
                "referencedDeclaration": 633,
                "src": "1210:11:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Participant_$633_storage_ptr",
                  "typeString": "struct ParticipantFactory.Participant"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 651,
            "mutability": "mutable",
            "name": "addresstoId",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1309:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 650,
              "keyType": {
                "id": 648,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1318:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1309:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 649,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1329:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 661,
            "name": "newParticipant",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hashUsername",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1472:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 655,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "coverageSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1494:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 657,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalClaims",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1513:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 659,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1531:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1471:73:2"
            },
            "src": "1451:94:2"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "1661:1073:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 673,
                            "name": "Platform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1531,
                            "src": "1679:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                              "typeString": "type(contract Platform)"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_getParticipantOpen",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1148,
                          "src": "1679:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1679:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63757272656e746c7920636c6f736564",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1711:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87a225f317e4ea4aa0b5d74598a771ec1d7bf192ef5a04e5c661691de0cdab3b",
                          "typeString": "literal_string \"currently closed\""
                        },
                        "value": "currently closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87a225f317e4ea4aa0b5d74598a771ec1d7bf192ef5a04e5c661691de0cdab3b",
                          "typeString": "literal_string \"currently closed\""
                        }
                      ],
                      "id": 672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1671:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1671:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 680,
                            "name": "addresstoId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "1809:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 683,
                          "indexExpression": {
                            "expression": {
                              "id": 681,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1821:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1821:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1809:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1836:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1809:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1801:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 687,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1998:38:2",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 689,
                                "name": "Platform",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1531,
                                "src": "1999:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                                  "typeString": "type(contract Platform)"
                                }
                              },
                              "id": 690,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "investorExists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 883,
                              "src": "1999:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 692,
                            "indexExpression": {
                              "id": 691,
                              "name": "hashUsername",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "2023:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1999:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2040:41:2",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 694,
                                "name": "Platform",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1531,
                                "src": "2041:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                                  "typeString": "type(contract Platform)"
                                }
                              },
                              "id": 695,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "participantExists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 894,
                              "src": "2041:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 697,
                            "indexExpression": {
                              "id": 696,
                              "name": "hashUsername",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "2068:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2041:40:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1998:83:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "557365726e616d652074616b656e",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2083:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_525b0acae5419181202d3a63649bf6b4c3194135d048e233aaf44f6a6767e285",
                          "typeString": "literal_string \"Username taken\""
                        },
                        "value": "Username taken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_525b0acae5419181202d3a63649bf6b4c3194135d048e233aaf44f6a6767e285",
                          "typeString": "literal_string \"Username taken\""
                        }
                      ],
                      "id": 688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1990:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1990:110:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:110:2"
                },
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 703,
                        "name": "addresstoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "2110:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 706,
                      "indexExpression": {
                        "expression": {
                          "id": 704,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2122:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2122:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2110:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 707,
                      "name": "hashUsername",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "2136:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2110:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "2110:38:2"
                },
                {
                  "expression": {
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 710,
                        "name": "idToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2158:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 712,
                      "indexExpression": {
                        "id": 711,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "2170:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2158:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 713,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2186:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2186:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2158:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:38:2"
                },
                {
                  "expression": {
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 717,
                        "name": "idToParticipant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "2206:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Participant_$633_storage_$",
                          "typeString": "mapping(bytes32 => struct ParticipantFactory.Participant storage ref)"
                        }
                      },
                      "id": 719,
                      "indexExpression": {
                        "id": 718,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "2222:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2206:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participant_$633_storage",
                        "typeString": "struct ParticipantFactory.Participant storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 721,
                          "name": "_coverageSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 663,
                          "src": "2250:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 722,
                          "name": "_totalClaims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "2265:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 723,
                          "name": "_premium",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "2279:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 720,
                        "name": "Participant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "2238:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Participant_$633_storage_ptr_$",
                          "typeString": "type(struct ParticipantFactory.Participant storage pointer)"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2238:50:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participant_$633_memory_ptr",
                        "typeString": "struct ParticipantFactory.Participant memory"
                      }
                    },
                    "src": "2206:82:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Participant_$633_storage",
                      "typeString": "struct ParticipantFactory.Participant storage ref"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:82:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 732,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2415:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2415:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 736,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2435:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ParticipantFactory_$815",
                              "typeString": "contract ParticipantFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ParticipantFactory_$815",
                              "typeString": "contract ParticipantFactory"
                            }
                          ],
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2427:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 734,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2427:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2427:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 738,
                          "name": "Platform",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1531,
                          "src": "2442:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                            "typeString": "type(contract Platform)"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "participantPremium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 847,
                        "src": "2442:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 727,
                          "name": "Platform",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1531,
                          "src": "2388:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                            "typeString": "type(contract Platform)"
                          }
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "usdt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 872,
                        "src": "2388:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2519",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2500,
                      "src": "2388:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:82:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:82:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 743,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "2675:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 744,
                        "name": "_coverageSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "2689:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 745,
                        "name": "_totalClaims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "2704:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 746,
                        "name": "_premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "2718:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 742,
                      "name": "newParticipant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "2660:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,uint256)"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2660:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 748,
                  "nodeType": "EmitStatement",
                  "src": "2655:72:2"
                }
              ]
            },
            "functionSelector": "751dd486",
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createParticipant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "_coverageSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "1578:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "_totalClaims",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "1598:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "_premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "1617:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "hashUsername",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "1632:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1577:76:2"
            },
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1661:0:2"
            },
            "scope": 815,
            "src": "1551:1183:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a6e5237",
            "id": 754,
            "mutability": "mutable",
            "name": "mapCoverageSize",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2811:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 753,
              "keyType": {
                "id": 751,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2820:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2811:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 752,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2831:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffcba768",
            "id": 758,
            "mutability": "mutable",
            "name": "mapTotalClaims",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2865:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 757,
              "keyType": {
                "id": 755,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2874:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2865:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 756,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2885:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d9e06270",
            "id": 762,
            "mutability": "mutable",
            "name": "mapPremium",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2918:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 761,
              "keyType": {
                "id": 759,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2927:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2918:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 760,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2938:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "09097092",
            "id": 766,
            "mutability": "mutable",
            "name": "mapProfit",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2967:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 765,
              "keyType": {
                "id": 763,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2976:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2967:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 764,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2987:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "73a14b69",
            "id": 770,
            "mutability": "mutable",
            "name": "mapOpen",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "3015:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 769,
              "keyType": {
                "id": 767,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3024:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3015:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 768,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3035:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 813,
              "nodeType": "Block",
              "src": "3171:530:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 776,
                            "name": "addresstoId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "3189:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 779,
                          "indexExpression": {
                            "expression": {
                              "id": 777,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3201:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3201:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3189:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3216:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3189:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3181:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3181:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 785,
                          "name": "hashUsername",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "3309:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 786,
                            "name": "addresstoId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "3325:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 789,
                          "indexExpression": {
                            "expression": {
                              "id": 787,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3337:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3337:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3325:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3309:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 784,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3301:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3301:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "3301:48:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 794,
                            "name": "hasClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "3367:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 796,
                          "indexExpression": {
                            "id": 795,
                            "name": "hashUsername",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "3378:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3367:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3395:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3367:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 793,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3359:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "3359:42:2"
                },
                {
                  "expression": {
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 801,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "3411:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 803,
                      "indexExpression": {
                        "id": 802,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "3422:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3411:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3438:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3411:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "3411:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 810,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "3596:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 807,
                        "name": "InvestorFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "3569:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InvestorFactory_$587_$",
                          "typeString": "type(contract InvestorFactory)"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "splitClaim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 377,
                      "src": "3569:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3569:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "3569:40:2"
                }
              ]
            },
            "functionSelector": "7423b4d1",
            "id": 814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "hashUsername",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "3110:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:54:2"
            },
            "returnParameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3171:0:2"
            },
            "scope": 815,
            "src": "3087:614:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 816,
        "src": "115:5511:2"
      }
    ],
    "src": "32:5598:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-04-08T02:20:52.956Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}