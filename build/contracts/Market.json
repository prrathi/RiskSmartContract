{
  "contractName": "Market",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_itemTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ad",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "status",
          "type": "bytes32"
        }
      ],
      "name": "TradeStatusChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_hashUsername",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "changeInvestor",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_getInvestorOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getParticipantOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_updateCapital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_capital",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hashUsername",
          "type": "bytes32"
        }
      ],
      "name": "createInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "time",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trades",
      "outputs": [
        {
          "internalType": "address",
          "name": "poster",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "status",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_trade",
          "type": "uint256"
        }
      ],
      "name": "getTrade",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "openTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trade",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hashUsername",
          "type": "bytes32"
        }
      ],
      "name": "executeTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_trade",
          "type": "uint256"
        }
      ],
      "name": "cancelTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_itemTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ad\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"}],\"name\":\"TradeStatusChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hashUsername\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"changeInvestor\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_getInvestorOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getParticipantOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_updateCapital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_trade\",\"type\":\"uint256\"}],\"name\":\"cancelTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_capital\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hashUsername\",\"type\":\"bytes32\"}],\"name\":\"createInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trade\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hashUsername\",\"type\":\"bytes32\"}],\"name\":\"executeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_trade\",\"type\":\"uint256\"}],\"name\":\"getTrade\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"openTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trades\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"poster\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancelTrade(uint256)\":{\"details\":\"Cancels a trade by the poster.\",\"params\":{\"_trade\":\"The trade to be cancelled.\"}},\"executeTrade(uint256,uint256,bytes32)\":{\"details\":\"Executes a trade. Must have approved this contract to transfer the amount of currency specified to the poster. Transfers ownership of the item to the filler.\",\"params\":{\"_amount\":\"The amount of tokens to buy at that price\",\"_trade\":\"The id of an existing trade\"}},\"getTrade(uint256)\":{\"details\":\"Returns the details for a trade.\",\"params\":{\"_trade\":\"The id for the trade.\"}},\"openTrade(uint256,uint256)\":{\"details\":\"Opens a new trade. \",\"params\":{\"_amount\":\"Maximum of the number of tokens being sold\",\"_price\":\"The price for each token.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/praneet/college/others/RiskSmartContract/contracts/Trading.sol\":\"Market\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/praneet/college/others/RiskSmartContract/contracts/InvestorFactory.sol\":{\"keccak256\":\"0xef924ed338088802b76af01ca3c1239acf68bb8c5ac95c467f80a6fc483f9057\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f91cde4fd54e96094a32a390a73f13d3b40529d855ccd9141e20c728f3a72935\",\"dweb:/ipfs/QmXBuqhycHkYb4hmD9aZrH2dhtZx7CSuVFYhmfik7v5PpJ\"]},\"/Users/praneet/college/others/RiskSmartContract/contracts/Platform.sol\":{\"keccak256\":\"0xaea5e6d1013f663085317b50acfd9ff63cbe114a51bc349559ffd7cd6895f572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06364be791bd1565661467e44f94682b307e049caf8fd66ec1f5ab7dffba74b2\",\"dweb:/ipfs/QmVz4ArWpf9mXv9fXLXfm55QzSKMJUDxzDvN2osGXH8wtM\"]},\"/Users/praneet/college/others/RiskSmartContract/contracts/PlatformSetup.sol\":{\"keccak256\":\"0x46e617fb53f09479ca319374a50598317a9d88b1510a365570b4d5e8dcde157d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97fb9c2dd6e1e8901d62a7eb52b2d7c9a911ccb40018841c43ebe04af62f4f5a\",\"dweb:/ipfs/QmWeDoLs8fF4Jut737b95HSxWzF6tGoncqLkEfW4azZATh\"]},\"/Users/praneet/college/others/RiskSmartContract/contracts/Token.sol\":{\"keccak256\":\"0xba00bce5b537ec24999816481a7d509a9639404b105cb210754d51e7d3282bd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ef6574b8bdd8105cacfbe81b68495fe3d95f2ac5f28888c4d7bdceb8812ebba\",\"dweb:/ipfs/QmSPfqqgrzY3gRHrzPHVwAGyMzADkqQrCpYrjoY7tCGXMG\"]},\"/Users/praneet/college/others/RiskSmartContract/contracts/Trading.sol\":{\"keccak256\":\"0x260a83bd9e1602e876d389b3c2b6037c5ba6f90697285f4871a7c6be6e8a1956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffe85b08696cb17aa497611d00a0e34b6dc7a9a72a256d4923f9ff817a9dfd9a\",\"dweb:/ipfs/QmRT7F1PFsnQiqKnkooULvnq4Agrcmarv81RY3UnQnoVis\"]},\"/Users/praneet/college/others/RiskSmartContract/contracts/WadMath.sol\":{\"keccak256\":\"0x42224a7949c301f5f5bd5aee7ae932c16e337b42c3a05d5a313f0679c98b1a3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd2c46843e56c870f8ea825014cf2ae60f2d825692eca0863f7fac1579fc4d75\",\"dweb:/ipfs/QmWtAaRJMmGsjsknHAyryK9xZsC9hPKyVxSg4B21opemnC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600260006101000a81548160ff021916908315150217905550620186a0600455606460055560506006556001600960006101000a81548160ff0219169083151502179055506001600960016101000a81548160ff0219169083151502179055506103e8600a5573dac17f958d2ee523a2206206994597c13d831ec7600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620000cf9062000215565b620000da90620002a8565b604051809103906000f080158015620000f7573d6000803e3d6000fd5b50601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603260145573dac17f958d2ee523a2206206994597c13d831ec7601760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200019f57600080fd5b5060405162004f2738038062004f278339818101604052810190620001c591906200023a565b80601860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601a819055505062000329565b6119ca806200355d83390190565b60008151905062000234816200030f565b92915050565b6000602082840312156200024d57600080fd5b60006200025d8482850162000223565b91505092915050565b600062000275600b83620002ca565b91507f73616d706c65546f6b656e0000000000000000000000000000000000000000006000830152602082019050919050565b60006020820190508181036000830152620002c38162000266565b9050919050565b600082825260208201905092915050565b6000620002e882620002ef565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200031a81620002db565b81146200032657600080fd5b50565b61322480620003396000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063279598fe1161008c5780632db25e05116100665780632db25e05146101dd578063e11754e514610210578063e8c6144f1461022e578063ff63ac3b1461024a576100cf565b8063279598fe146101995780632b76cc50146101b75780632bdbf9a8146101c1576100cf565b806309ec6cc7146100d45780630c493fba146100f05780630fb5a6b41461010c57806316ada5471461012a5780631e6c598e14610148578063209652551461017b575b600080fd5b6100ee60048036038101906100e99190612943565b610268565b005b61010a600480360381019061010591906129d1565b6103db565b005b6101146105e2565b6040516101219190612efa565b60405180910390f35b6101326105e9565b60405161013f9190612efa565b60405180910390f35b610162600480360381019061015d9190612943565b6105ef565b6040516101729493929190612d91565b60405180910390f35b61018361063f565b6040516101909190612efa565b60405180910390f35b6101a16106e3565b6040516101ae9190612dd6565b60405180910390f35b6101bf6106fa565b005b6101db60048036038101906101d69190612995565b6106fc565b005b6101f760048036038101906101f29190612943565b610b4f565b6040516102079493929190612d91565b60405180910390f35b610218610c2a565b6040516102259190612dd6565b60405180910390f35b61024860048036038101906102439190612a0d565b610c41565b005b610252610e89565b60405161025f9190612efa565b60405180910390f35b60006019600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030890612e3a565b60405180910390fd5b7f4f70656e00000000000000000000000000000000000000000000000000000000816003015414610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90612e1a565b60405180910390fd5b7f43616e63656c6c6564000000000000000000000000000000000000000000000081600301819055507f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf826040516103cf9190612f3c565b60405180910390a15050565b600060015414156103f3576103ee610ee5565b6105de565b81601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161044f9190612d16565b60206040518083038186803b15801561046757600080fd5b505afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f919061296c565b10156104aa57600080fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020017f4f70656e0000000000000000000000000000000000000000000000000000000081525060196000601a54815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050506001601a60008282546105919190612f9b565b925050819055507f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf6001601a546105c8919061307c565b6040516105d59190612f63565b60405180910390a15b5050565b620fd20081565b60015481565b60196020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60008060001b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561069057600080fd5b6000601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506106dd81610f8a565b91505090565b6000600960009054906101000a900460ff16905090565b565b6107046106e3565b610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a90612e9a565b60405180910390fd5b6000801b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107be90612eda565b60405180910390fd5b600e600082815260200190815260200160002060009054906101000a900460ff1615801561081357506011600082815260200190815260200160002060009054906101000a900460ff16155b610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084990612e7a565b60405180910390fd5b80601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336016600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561095257600080fd5b505afa158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a919061296c565b836109959190612ff1565b90506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0157600080fd5b505afa158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a39919061296c565b82610a449190613022565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610aa593929190612d31565b602060405180830381600087803b158015610abf57600080fd5b505af1158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af7919061291a565b50610b06838260018033610fa7565b610b103383611483565b7f86790858d185786f1b01acdbd51f684bc572ba946e11bbd08b12b0559bf945538383604051610b41929190612df1565b60405180910390a150505050565b600080600080601a5485108015610b67575060008510155b610b7057600080fd5b6000601960008781526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481525050905080600001518160200151826040015183606001519450945094509450509193509193565b6000600960019054906101000a900460ff16905090565b610c4b6000611516565b601a5482108015610c5d575060008210155b610c6657600080fd5b60008311610c7357600080fd5b60006019600084815260200190815260200160002090508060010154841115610c9e57806001015493505b7f4f70656e00000000000000000000000000000000000000000000000000000000816003015414610d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfb90612e1a565b60405180910390fd5b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846002015488610d789190613022565b6040518463ffffffff1660e01b8152600401610d9693929190612d31565b602060405180830381600087803b158015610db057600080fd5b505af1158015610dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de8919061291a565b50610e1933858360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611533565b7f457865637574656400000000000000000000000000000000000000000000000081600301819055507f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf83604051610e719190612f15565b60405180910390a1610e836001611516565b50505050565b600080620fd20060015442610e9e919061307c565b10159050808015610ebb5750600260009054906101000a900460ff165b15610ed1576000600181905550610ed0611bdc565b5b60015442610edf919061307c565b91505090565b60005b601a54811015610f7f57600060196000838152602001908152602001600020905060008160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081600101819055506000816002018190555060008160030181905550508080610f7790613102565b915050610ee8565b506000601a81905550565b600060036000838152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff166012600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061107357508073ffffffffffffffffffffffffffffffffffffffff166012600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b61107c57600080fd5b8180156110a75750600e600086815260200190815260200160002060009054906101000a900460ff16155b1561110257600c8590806001815401808255809150506001900390600052602060002001600090919091909150556001600e600087815260200190815260200160002060006101000a81548160ff0219169083151502179055505b811561139a5760008411156113955760006103e8856014546111249190613022565b61112e9190612ff1565b90506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561119a57600080fd5b505afa1580156111ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d2919061296c565b866111dd9190612ff1565b905081866111eb919061307c565b955084806112af5750600081601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016112529190612d16565b60206040518083038186803b15801561126a57600080fd5b505afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a2919061296c565b6112ac919061307c565b10155b6112ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e590612e5a565b60405180910390fd5b841561134557816000808282546113059190612f9b565b9250508190555081600d6000898152602001908152602001600020600082825461132f9190612f9b565b925050819055506113408382611483565b611392565b81600080828254611356919061307c565b9250508190555081600d60008981526020019081526020016000206000828254611380919061307c565b925050819055506113918382612471565b5b50505b61141f565b6011600086815260200190815260200160002060009054906101000a900460ff16156113c557600080fd5b600f85908060018154018082558091505060019003906000526020600020016000909190919091505560016011600087815260200190815260200160002060006101000a81548160ff021916908315150217905550600093505b806012600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061147c858585612504565b5050505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e6ec24783836040518363ffffffff1660e01b81526004016114e0929190612d68565b600060405180830381600087803b1580156114fa57600080fd5b505af115801561150e573d6000803e3d6000fd5b505050505050565b80600260006101000a81548160ff02191690831515021790555050565b600083141561154157600080fd5b6000801b601560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561159057600080fd5b6000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016115ed9190612d16565b60206040518083038186803b15801561160557600080fd5b505afa158015611619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163d919061296c565b90506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161169c9190612d16565b60206040518083038186803b1580156116b457600080fd5b505afa1580156116c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ec919061296c565b9050600085836116fc9190612f9b565b101561170757600080fd5b60008582611715919061307c565b101561172057600080fd5b6000801b601560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156118c857600e600084815260200190815260200160002060009054906101000a900460ff161580156117b657506011600084815260200190815260200160002060009054906101000a900460ff16155b6117f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ec90612e7a565b60405180910390fd5b82601560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336016600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600c8390806001815401808255809150506001900390600052602060002001600090919091909150556118c383600060018033610fa7565b611914565b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831461191357600080fd5b5b61191e8486612471565b6119288686611483565b611a20601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156119d357600080fd5b505afa1580156119e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0b919061296c565b87611a169190613022565b6000600188610fa7565b611b17601560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b158015611acb57600080fd5b505afa158015611adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b03919061296c565b87611b0e9190613022565b60018088610fa7565b7f86790858d185786f1b01acdbd51f684bc572ba946e11bbd08b12b0559bf945538386604051611b48929190612df1565b60405180910390a17f86790858d185786f1b01acdbd51f684bc572ba946e11bbd08b12b0559bf94553601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054866000611bbe919061307c565b604051611bcc929190612df1565b60405180910390a1505050505050565b611be46125f4565b60005b600c80549050811015612090576000611c43600c8381548110611c33577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154610f8a565b90506000811015611c5357600080fd5b6000811115611d8457600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60126000600c8681548110611cd8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401611d30929190612d68565b602060405180830381600087803b158015611d4a57600080fd5b505af1158015611d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d82919061291a565b505b600060036000600c8581548110611dc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002081905550600060126000600c8581548110611e21577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401611eba9190612d16565b60206040518083038186803b158015611ed257600080fd5b505afa158015611ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0a919061296c565b9050611f168282612471565b600060126000600c8781548110611f56577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600e6000600c8781548110611fed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600d6000600c878154811061205d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002081905550505050808061208890613102565b915050611be7565b50600c600061209f9190612888565b60005b600f8054905081101561242a5760106000600f83815481106120ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161561224357600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60126000600f8581548110612195577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a546040518363ffffffff1660e01b81526004016121ef929190612d68565b602060405180830381600087803b15801561220957600080fd5b505af115801561221d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612241919061291a565b505b600060036000600f8481548110612283577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002081905550600060126000600f84815481106122e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060116000600f8481548110612377577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548160ff021916908315150217905550600060106000600f84815481106123e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548160ff021916908315150217905550808061242290613102565b9150506120a2565b50600f60006124399190612888565b6001600960006101000a81548160ff0219169083151502179055506001600960016101000a81548160ff021916908315150217905550565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636161eb1883836040518363ffffffff1660e01b81526004016124ce929190612d68565b600060405180830381600087803b1580156124e857600080fd5b505af11580156124fc573d6000803e3d6000fd5b505050505050565b80156125c4576011600084815260200190815260200160002060009054906101000a900460ff168015612538575060008214155b15612595576010600084815260200190815260200160002060009054906101000a900460ff161561256857600080fd5b60016010600085815260200190815260200160002060006101000a81548160ff0219169083151502179055505b816003600085815260200190815260200160002060008282546125b89190612f9b565b925050819055506125ef565b816003600085815260200190815260200160002060008282546125e7919061307c565b925050819055505b505050565b6000600654600c805490506126099190613022565b600554600f8054905061261c9190613022565b612626919061307c565b905060005b600c805490508110156127cf576000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160126000600c86815481106126b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161270c9190612d16565b60206040518083038186803b15801561272457600080fd5b505afa158015612738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275c919061296c565b6006546127699190613022565b90506127bb600c83815481106127a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154826001612504565b5080806127c790613102565b91505061262b565b5060008110156127de57600080fd5b60008111156127f3576127f28160016127f6565b5b50565b8061286a5760008260045461280b919061307c565b101561284c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161284390612eba565b60405180910390fd5b816004600082825461285e919061307c565b92505081905550612884565b816004600082825461287c9190612f9b565b925050819055505b5050565b50805460008255906000526020600020908101906128a691906128a9565b50565b5b808211156128c25760008160009055506001016128aa565b5090565b6000815190506128d5816131a9565b92915050565b6000813590506128ea816131c0565b92915050565b6000813590506128ff816131d7565b92915050565b600081519050612914816131d7565b92915050565b60006020828403121561292c57600080fd5b600061293a848285016128c6565b91505092915050565b60006020828403121561295557600080fd5b6000612963848285016128f0565b91505092915050565b60006020828403121561297e57600080fd5b600061298c84828501612905565b91505092915050565b600080604083850312156129a857600080fd5b60006129b6858286016128f0565b92505060206129c7858286016128db565b9150509250929050565b600080604083850312156129e457600080fd5b60006129f2858286016128f0565b9250506020612a03858286016128f0565b9150509250929050565b600080600060608486031215612a2257600080fd5b6000612a30868287016128f0565b9350506020612a41868287016128f0565b9250506040612a52868287016128db565b9150509250925092565b612a65816130b0565b82525050565b612a74816130c2565b82525050565b612a83816130ce565b82525050565b7f4578656375746564000000000000000000000000000000000000000000000000815250565b6000612abc601283612f8a565b91507f5472616465206973206e6f74204f70656e2e00000000000000000000000000006000830152602082019050919050565b6000612afc602683612f8a565b91507f54726164652063616e2062652063616e63656c6c6564206f6e6c79206279207060008301527f6f737465722e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b62602183612f8a565b91507f63616e27742068617665206e6567617469766520746f6b656e2062616c616e6360008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612bc8600e83612f8a565b91507f557365726e616d652074616b656e0000000000000000000000000000000000006000830152602082019050919050565b7f43616e63656c6c65640000000000000000000000000000000000000000000000815250565b6000612c2e601083612f8a565b91507f63757272656e746c7920636c6f736564000000000000000000000000000000006000830152602082019050919050565b6000612c6e601583612f8a565b91507f506c6174666f726d206f7574206f66206d6f6e657900000000000000000000006000830152602082019050919050565b7f4f70656e00000000000000000000000000000000000000000000000000000000815250565b6000612cd4601483612f8a565b91507f6164647265737320616c726561647920757365640000000000000000000000006000830152602082019050919050565b612d10816130f8565b82525050565b6000602082019050612d2b6000830184612a5c565b92915050565b6000606082019050612d466000830186612a5c565b612d536020830185612a5c565b612d606040830184612d07565b949350505050565b6000604082019050612d7d6000830185612a5c565b612d8a6020830184612d07565b9392505050565b6000608082019050612da66000830187612a5c565b612db36020830186612d07565b612dc06040830185612d07565b612dcd6060830184612a7a565b95945050505050565b6000602082019050612deb6000830184612a6b565b92915050565b6000604082019050612e066000830185612a7a565b612e136020830184612d07565b9392505050565b60006020820190508181036000830152612e3381612aaf565b9050919050565b60006020820190508181036000830152612e5381612aef565b9050919050565b60006020820190508181036000830152612e7381612b55565b9050919050565b60006020820190508181036000830152612e9381612bbb565b9050919050565b60006020820190508181036000830152612eb381612c21565b9050919050565b60006020820190508181036000830152612ed381612c61565b9050919050565b60006020820190508181036000830152612ef381612cc7565b9050919050565b6000602082019050612f0f6000830184612d07565b92915050565b6000604082019050612f2a6000830184612d07565b612f3660208301612a89565b92915050565b6000604082019050612f516000830184612d07565b612f5d60208301612bfb565b92915050565b6000604082019050612f786000830184612d07565b612f8460208301612ca1565b92915050565b600082825260208201905092915050565b6000612fa6826130f8565b9150612fb1836130f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612fe657612fe561314b565b5b828201905092915050565b6000612ffc826130f8565b9150613007836130f8565b9250826130175761301661317a565b5b828204905092915050565b600061302d826130f8565b9150613038836130f8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156130715761307061314b565b5b828202905092915050565b6000613087826130f8565b9150613092836130f8565b9250828210156130a5576130a461314b565b5b828203905092915050565b60006130bb826130d8565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061310d826130f8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156131405761313f61314b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6131b2816130c2565b81146131bd57600080fd5b50565b6131c9816130ce565b81146131d457600080fd5b50565b6131e0816130f8565b81146131eb57600080fd5b5056fea264697066735822122008a96bca00c55475dca1c64c474cd9553e4e216aef05f9192b4f3f3fc6d9284364736f6c6343000800003360806040523480156200001157600080fd5b50604051620019ca380380620019ca8339818101604052810190620000379190620001b2565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200007057600080fd5b80600390805190602001906200008892919062000090565b505062000328565b8280546200009e9062000294565b90600052602060002090601f016020900481019282620000c257600085556200010e565b82601f10620000dd57805160ff19168380011785556200010e565b828001600101855582156200010e579182015b828111156200010d578251825591602001919060010190620000f0565b5b5090506200011d919062000121565b5090565b5b808211156200013c57600081600090555060010162000122565b5090565b60006200015762000151846200022b565b620001f7565b9050828152602081018484840111156200017057600080fd5b6200017d8482856200025e565b509392505050565b600082601f8301126200019757600080fd5b8151620001a984826020860162000140565b91505092915050565b600060208284031215620001c557600080fd5b600082015167ffffffffffffffff811115620001e057600080fd5b620001ee8482850162000185565b91505092915050565b6000604051905081810181811067ffffffffffffffff82111715620002215762000220620002f9565b5b8060405250919050565b600067ffffffffffffffff821115620002495762000248620002f9565b5b601f19601f8301169050602081019050919050565b60005b838110156200027e57808201518184015260208101905062000261565b838111156200028e576000848401525b50505050565b60006002820490506001821680620002ad57607f821691505b60208210811415620002c457620002c3620002ca565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61169280620003386000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063706ad35d1161008c578063a9059cbb11610066578063a9059cbb14610271578063c4d66de8146102a1578063dd62ed3e146102bd578063f022ca4c146102ed576100ea565b8063706ad35d146101f357806370a0823114610211578063a457c2d714610241576100ea565b806323b872dd116100c857806323b872dd1461015b578063395093511461018b5780634e6ec247146101bb5780636161eb18146101d7576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030b565b60405161010491906112c6565b60405180910390f35b61012760048036038101906101229190610ed7565b61039d565b60405161013491906112ab565b60405180910390f35b6101456103b4565b6040516101529190611428565b60405180910390f35b61017560048036038101906101709190610e88565b6103be565b60405161018291906112ab565b60405180910390f35b6101a560048036038101906101a09190610ed7565b6104b1565b6040516101b291906112ab565b60405180910390f35b6101d560048036038101906101d09190610ed7565b61054f565b005b6101f160048036038101906101ec9190610ed7565b61068a565b005b6101fb610846565b6040516102089190611428565b60405180910390f35b61022b60048036038101906102269190610e23565b61084e565b6040516102389190611428565b60405180910390f35b61025b60048036038101906102569190610ed7565b61089c565b60405161026891906112ab565b60405180910390f35b61028b60048036038101906102869190610ed7565b610982565b60405161029891906112ab565b60405180910390f35b6102bb60048036038101906102b69190610f13565b610999565b005b6102d760048036038101906102d29190610e4c565b6109dc565b6040516102e49190611428565b60405180910390f35b6102f5610a63565b6040516103029190611428565b60405180910390f35b60606003805461031a90611576565b80601f016020809104026020016040519081016040528092919081815260200182805461034690611576565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b60006103aa338484610a6c565b6001905092915050565b6000600454905090565b60006103cb848484610bd2565b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561048f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610486906113c8565b60405180910390fd5b6104a5853385846104a091906114b5565b610a6c565b60019150509392505050565b6000610545338484600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610540919061145f565b610a6c565b6001905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105a757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90611408565b60405180910390fd5b8060046000828254610629919061145f565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461067f919061145f565b925050819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610752576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610749906113a8565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156107d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d0906113e8565b60405180910390fd5b81816107e591906114b5565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816004600082825461083a91906114b5565b92505081905550505050565b6305f5e10081565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080915050919050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095890611348565b60405180910390fd5b6109773385858461097291906114b5565b610a6c565b600191505092915050565b600061098f338484610bd2565b6001905092915050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006064905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad3906112e8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4390611388565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3990611308565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca990611328565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3090611368565b60405180910390fd5b8181610d4591906114b5565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dd7919061145f565b9250508190555050505050565b600081359050610df381611617565b92915050565b600081359050610e088161162e565b92915050565b600081359050610e1d81611645565b92915050565b600060208284031215610e3557600080fd5b6000610e4384828501610de4565b91505092915050565b60008060408385031215610e5f57600080fd5b6000610e6d85828601610de4565b9250506020610e7e85828601610de4565b9150509250929050565b600080600060608486031215610e9d57600080fd5b6000610eab86828701610de4565b9350506020610ebc86828701610de4565b9250506040610ecd86828701610e0e565b9150509250925092565b60008060408385031215610eea57600080fd5b6000610ef885828601610de4565b9250506020610f0985828601610e0e565b9150509250929050565b600060208284031215610f2557600080fd5b6000610f3384828501610df9565b91505092915050565b610f45816114fb565b82525050565b6000610f5682611443565b610f60818561144e565b9350610f70818560208601611543565b610f7981611606565b840191505092915050565b6000610f9160238361144e565b91507f63616e277420617070726f76652066726f6d20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ff7601e8361144e565b91507f7472616e736665722066726f6d20746865207a65726f206164647265737300006000830152602082019050919050565b6000611037601c8361144e565b91507f7472616e7366657220746f20746865207a65726f2061646472657373000000006000830152602082019050919050565b600061107760268361144e565b91507f45546f6b656e3a2064656372656173656420616c6c6f77616e63652062656c6f60008301527f77207a65726f00000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006110dd601f8361144e565b91507f7472616e7366657220616d6f756e7420657863656564732062616c616e6365006000830152602082019050919050565b600061111d60218361144e565b91507f63616e277420617070726f766520746f20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611183601a8361144e565b91507f4275726e2066726f6d20746865207a65726f20616464726573730000000000006000830152602082019050919050565b60006111c360218361144e565b91507f7472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6360008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611229601b8361144e565b91507f4275726e20616d6f756e7420657863656564732062616c616e636500000000006000830152602082019050919050565b600061126960188361144e565b91507f6d696e7420746f20746865207a65726f206164647265737300000000000000006000830152602082019050919050565b6112a581611539565b82525050565b60006020820190506112c06000830184610f3c565b92915050565b600060208201905081810360008301526112e08184610f4b565b905092915050565b6000602082019050818103600083015261130181610f84565b9050919050565b6000602082019050818103600083015261132181610fea565b9050919050565b600060208201905081810360008301526113418161102a565b9050919050565b600060208201905081810360008301526113618161106a565b9050919050565b60006020820190508181036000830152611381816110d0565b9050919050565b600060208201905081810360008301526113a181611110565b9050919050565b600060208201905081810360008301526113c181611176565b9050919050565b600060208201905081810360008301526113e1816111b6565b9050919050565b600060208201905081810360008301526114018161121c565b9050919050565b600060208201905081810360008301526114218161125c565b9050919050565b600060208201905061143d600083018461129c565b92915050565b600081519050919050565b600082825260208201905092915050565b600061146a82611539565b915061147583611539565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114aa576114a96115a8565b5b828201905092915050565b60006114c082611539565b91506114cb83611539565b9250828210156114de576114dd6115a8565b5b828203905092915050565b60006114f482611519565b9050919050565b60008115159050919050565b6000611512826114e9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611561578082015181840152602081019050611546565b83811115611570576000848401525b50505050565b6000600282049050600182168061158e57607f821691505b602082108114156115a2576115a16115d7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611620816114e9565b811461162b57600080fd5b50565b61163781611507565b811461164257600080fd5b50565b61164e81611539565b811461165957600080fd5b5056fea2646970667358221220f89fadebee51d68d3495922fa5ee7197566b0292c974c542d3ce80947db4157164736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063279598fe1161008c5780632db25e05116100665780632db25e05146101dd578063e11754e514610210578063e8c6144f1461022e578063ff63ac3b1461024a576100cf565b8063279598fe146101995780632b76cc50146101b75780632bdbf9a8146101c1576100cf565b806309ec6cc7146100d45780630c493fba146100f05780630fb5a6b41461010c57806316ada5471461012a5780631e6c598e14610148578063209652551461017b575b600080fd5b6100ee60048036038101906100e99190612943565b610268565b005b61010a600480360381019061010591906129d1565b6103db565b005b6101146105e2565b6040516101219190612efa565b60405180910390f35b6101326105e9565b60405161013f9190612efa565b60405180910390f35b610162600480360381019061015d9190612943565b6105ef565b6040516101729493929190612d91565b60405180910390f35b61018361063f565b6040516101909190612efa565b60405180910390f35b6101a16106e3565b6040516101ae9190612dd6565b60405180910390f35b6101bf6106fa565b005b6101db60048036038101906101d69190612995565b6106fc565b005b6101f760048036038101906101f29190612943565b610b4f565b6040516102079493929190612d91565b60405180910390f35b610218610c2a565b6040516102259190612dd6565b60405180910390f35b61024860048036038101906102439190612a0d565b610c41565b005b610252610e89565b60405161025f9190612efa565b60405180910390f35b60006019600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030890612e3a565b60405180910390fd5b7f4f70656e00000000000000000000000000000000000000000000000000000000816003015414610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90612e1a565b60405180910390fd5b7f43616e63656c6c6564000000000000000000000000000000000000000000000081600301819055507f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf826040516103cf9190612f3c565b60405180910390a15050565b600060015414156103f3576103ee610ee5565b6105de565b81601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161044f9190612d16565b60206040518083038186803b15801561046757600080fd5b505afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f919061296c565b10156104aa57600080fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020017f4f70656e0000000000000000000000000000000000000000000000000000000081525060196000601a54815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050506001601a60008282546105919190612f9b565b925050819055507f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf6001601a546105c8919061307c565b6040516105d59190612f63565b60405180910390a15b5050565b620fd20081565b60015481565b60196020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60008060001b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561069057600080fd5b6000601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506106dd81610f8a565b91505090565b6000600960009054906101000a900460ff16905090565b565b6107046106e3565b610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a90612e9a565b60405180910390fd5b6000801b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107be90612eda565b60405180910390fd5b600e600082815260200190815260200160002060009054906101000a900460ff1615801561081357506011600082815260200190815260200160002060009054906101000a900460ff16155b610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084990612e7a565b60405180910390fd5b80601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336016600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561095257600080fd5b505afa158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a919061296c565b836109959190612ff1565b90506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0157600080fd5b505afa158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a39919061296c565b82610a449190613022565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610aa593929190612d31565b602060405180830381600087803b158015610abf57600080fd5b505af1158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af7919061291a565b50610b06838260018033610fa7565b610b103383611483565b7f86790858d185786f1b01acdbd51f684bc572ba946e11bbd08b12b0559bf945538383604051610b41929190612df1565b60405180910390a150505050565b600080600080601a5485108015610b67575060008510155b610b7057600080fd5b6000601960008781526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481525050905080600001518160200151826040015183606001519450945094509450509193509193565b6000600960019054906101000a900460ff16905090565b610c4b6000611516565b601a5482108015610c5d575060008210155b610c6657600080fd5b60008311610c7357600080fd5b60006019600084815260200190815260200160002090508060010154841115610c9e57806001015493505b7f4f70656e00000000000000000000000000000000000000000000000000000000816003015414610d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfb90612e1a565b60405180910390fd5b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846002015488610d789190613022565b6040518463ffffffff1660e01b8152600401610d9693929190612d31565b602060405180830381600087803b158015610db057600080fd5b505af1158015610dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de8919061291a565b50610e1933858360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611533565b7f457865637574656400000000000000000000000000000000000000000000000081600301819055507f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf83604051610e719190612f15565b60405180910390a1610e836001611516565b50505050565b600080620fd20060015442610e9e919061307c565b10159050808015610ebb5750600260009054906101000a900460ff165b15610ed1576000600181905550610ed0611bdc565b5b60015442610edf919061307c565b91505090565b60005b601a54811015610f7f57600060196000838152602001908152602001600020905060008160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081600101819055506000816002018190555060008160030181905550508080610f7790613102565b915050610ee8565b506000601a81905550565b600060036000838152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff166012600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061107357508073ffffffffffffffffffffffffffffffffffffffff166012600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b61107c57600080fd5b8180156110a75750600e600086815260200190815260200160002060009054906101000a900460ff16155b1561110257600c8590806001815401808255809150506001900390600052602060002001600090919091909150556001600e600087815260200190815260200160002060006101000a81548160ff0219169083151502179055505b811561139a5760008411156113955760006103e8856014546111249190613022565b61112e9190612ff1565b90506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561119a57600080fd5b505afa1580156111ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d2919061296c565b866111dd9190612ff1565b905081866111eb919061307c565b955084806112af5750600081601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016112529190612d16565b60206040518083038186803b15801561126a57600080fd5b505afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a2919061296c565b6112ac919061307c565b10155b6112ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e590612e5a565b60405180910390fd5b841561134557816000808282546113059190612f9b565b9250508190555081600d6000898152602001908152602001600020600082825461132f9190612f9b565b925050819055506113408382611483565b611392565b81600080828254611356919061307c565b9250508190555081600d60008981526020019081526020016000206000828254611380919061307c565b925050819055506113918382612471565b5b50505b61141f565b6011600086815260200190815260200160002060009054906101000a900460ff16156113c557600080fd5b600f85908060018154018082558091505060019003906000526020600020016000909190919091505560016011600087815260200190815260200160002060006101000a81548160ff021916908315150217905550600093505b806012600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061147c858585612504565b5050505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e6ec24783836040518363ffffffff1660e01b81526004016114e0929190612d68565b600060405180830381600087803b1580156114fa57600080fd5b505af115801561150e573d6000803e3d6000fd5b505050505050565b80600260006101000a81548160ff02191690831515021790555050565b600083141561154157600080fd5b6000801b601560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561159057600080fd5b6000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016115ed9190612d16565b60206040518083038186803b15801561160557600080fd5b505afa158015611619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163d919061296c565b90506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161169c9190612d16565b60206040518083038186803b1580156116b457600080fd5b505afa1580156116c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ec919061296c565b9050600085836116fc9190612f9b565b101561170757600080fd5b60008582611715919061307c565b101561172057600080fd5b6000801b601560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156118c857600e600084815260200190815260200160002060009054906101000a900460ff161580156117b657506011600084815260200190815260200160002060009054906101000a900460ff16155b6117f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ec90612e7a565b60405180910390fd5b82601560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336016600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600c8390806001815401808255809150506001900390600052602060002001600090919091909150556118c383600060018033610fa7565b611914565b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831461191357600080fd5b5b61191e8486612471565b6119288686611483565b611a20601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156119d357600080fd5b505afa1580156119e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0b919061296c565b87611a169190613022565b6000600188610fa7565b611b17601560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f022ca4c6040518163ffffffff1660e01b815260040160206040518083038186803b158015611acb57600080fd5b505afa158015611adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b03919061296c565b87611b0e9190613022565b60018088610fa7565b7f86790858d185786f1b01acdbd51f684bc572ba946e11bbd08b12b0559bf945538386604051611b48929190612df1565b60405180910390a17f86790858d185786f1b01acdbd51f684bc572ba946e11bbd08b12b0559bf94553601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054866000611bbe919061307c565b604051611bcc929190612df1565b60405180910390a1505050505050565b611be46125f4565b60005b600c80549050811015612090576000611c43600c8381548110611c33577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154610f8a565b90506000811015611c5357600080fd5b6000811115611d8457600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60126000600c8681548110611cd8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401611d30929190612d68565b602060405180830381600087803b158015611d4a57600080fd5b505af1158015611d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d82919061291a565b505b600060036000600c8581548110611dc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002081905550600060126000600c8581548110611e21577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401611eba9190612d16565b60206040518083038186803b158015611ed257600080fd5b505afa158015611ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0a919061296c565b9050611f168282612471565b600060126000600c8781548110611f56577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600e6000600c8781548110611fed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600d6000600c878154811061205d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002081905550505050808061208890613102565b915050611be7565b50600c600061209f9190612888565b60005b600f8054905081101561242a5760106000600f83815481106120ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161561224357600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60126000600f8581548110612195577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a546040518363ffffffff1660e01b81526004016121ef929190612d68565b602060405180830381600087803b15801561220957600080fd5b505af115801561221d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612241919061291a565b505b600060036000600f8481548110612283577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002081905550600060126000600f84815481106122e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060116000600f8481548110612377577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548160ff021916908315150217905550600060106000600f84815481106123e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060006101000a81548160ff021916908315150217905550808061242290613102565b9150506120a2565b50600f60006124399190612888565b6001600960006101000a81548160ff0219169083151502179055506001600960016101000a81548160ff021916908315150217905550565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636161eb1883836040518363ffffffff1660e01b81526004016124ce929190612d68565b600060405180830381600087803b1580156124e857600080fd5b505af11580156124fc573d6000803e3d6000fd5b505050505050565b80156125c4576011600084815260200190815260200160002060009054906101000a900460ff168015612538575060008214155b15612595576010600084815260200190815260200160002060009054906101000a900460ff161561256857600080fd5b60016010600085815260200190815260200160002060006101000a81548160ff0219169083151502179055505b816003600085815260200190815260200160002060008282546125b89190612f9b565b925050819055506125ef565b816003600085815260200190815260200160002060008282546125e7919061307c565b925050819055505b505050565b6000600654600c805490506126099190613022565b600554600f8054905061261c9190613022565b612626919061307c565b905060005b600c805490508110156127cf576000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160126000600c86815481106126b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161270c9190612d16565b60206040518083038186803b15801561272457600080fd5b505afa158015612738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275c919061296c565b6006546127699190613022565b90506127bb600c83815481106127a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154826001612504565b5080806127c790613102565b91505061262b565b5060008110156127de57600080fd5b60008111156127f3576127f28160016127f6565b5b50565b8061286a5760008260045461280b919061307c565b101561284c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161284390612eba565b60405180910390fd5b816004600082825461285e919061307c565b92505081905550612884565b816004600082825461287c9190612f9b565b925050819055505b5050565b50805460008255906000526020600020908101906128a691906128a9565b50565b5b808211156128c25760008160009055506001016128aa565b5090565b6000815190506128d5816131a9565b92915050565b6000813590506128ea816131c0565b92915050565b6000813590506128ff816131d7565b92915050565b600081519050612914816131d7565b92915050565b60006020828403121561292c57600080fd5b600061293a848285016128c6565b91505092915050565b60006020828403121561295557600080fd5b6000612963848285016128f0565b91505092915050565b60006020828403121561297e57600080fd5b600061298c84828501612905565b91505092915050565b600080604083850312156129a857600080fd5b60006129b6858286016128f0565b92505060206129c7858286016128db565b9150509250929050565b600080604083850312156129e457600080fd5b60006129f2858286016128f0565b9250506020612a03858286016128f0565b9150509250929050565b600080600060608486031215612a2257600080fd5b6000612a30868287016128f0565b9350506020612a41868287016128f0565b9250506040612a52868287016128db565b9150509250925092565b612a65816130b0565b82525050565b612a74816130c2565b82525050565b612a83816130ce565b82525050565b7f4578656375746564000000000000000000000000000000000000000000000000815250565b6000612abc601283612f8a565b91507f5472616465206973206e6f74204f70656e2e00000000000000000000000000006000830152602082019050919050565b6000612afc602683612f8a565b91507f54726164652063616e2062652063616e63656c6c6564206f6e6c79206279207060008301527f6f737465722e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b62602183612f8a565b91507f63616e27742068617665206e6567617469766520746f6b656e2062616c616e6360008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612bc8600e83612f8a565b91507f557365726e616d652074616b656e0000000000000000000000000000000000006000830152602082019050919050565b7f43616e63656c6c65640000000000000000000000000000000000000000000000815250565b6000612c2e601083612f8a565b91507f63757272656e746c7920636c6f736564000000000000000000000000000000006000830152602082019050919050565b6000612c6e601583612f8a565b91507f506c6174666f726d206f7574206f66206d6f6e657900000000000000000000006000830152602082019050919050565b7f4f70656e00000000000000000000000000000000000000000000000000000000815250565b6000612cd4601483612f8a565b91507f6164647265737320616c726561647920757365640000000000000000000000006000830152602082019050919050565b612d10816130f8565b82525050565b6000602082019050612d2b6000830184612a5c565b92915050565b6000606082019050612d466000830186612a5c565b612d536020830185612a5c565b612d606040830184612d07565b949350505050565b6000604082019050612d7d6000830185612a5c565b612d8a6020830184612d07565b9392505050565b6000608082019050612da66000830187612a5c565b612db36020830186612d07565b612dc06040830185612d07565b612dcd6060830184612a7a565b95945050505050565b6000602082019050612deb6000830184612a6b565b92915050565b6000604082019050612e066000830185612a7a565b612e136020830184612d07565b9392505050565b60006020820190508181036000830152612e3381612aaf565b9050919050565b60006020820190508181036000830152612e5381612aef565b9050919050565b60006020820190508181036000830152612e7381612b55565b9050919050565b60006020820190508181036000830152612e9381612bbb565b9050919050565b60006020820190508181036000830152612eb381612c21565b9050919050565b60006020820190508181036000830152612ed381612c61565b9050919050565b60006020820190508181036000830152612ef381612cc7565b9050919050565b6000602082019050612f0f6000830184612d07565b92915050565b6000604082019050612f2a6000830184612d07565b612f3660208301612a89565b92915050565b6000604082019050612f516000830184612d07565b612f5d60208301612bfb565b92915050565b6000604082019050612f786000830184612d07565b612f8460208301612ca1565b92915050565b600082825260208201905092915050565b6000612fa6826130f8565b9150612fb1836130f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612fe657612fe561314b565b5b828201905092915050565b6000612ffc826130f8565b9150613007836130f8565b9250826130175761301661317a565b5b828204905092915050565b600061302d826130f8565b9150613038836130f8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156130715761307061314b565b5b828202905092915050565b6000613087826130f8565b9150613092836130f8565b9250828210156130a5576130a461314b565b5b828203905092915050565b60006130bb826130d8565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061310d826130f8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156131405761313f61314b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6131b2816130c2565b81146131bd57600080fd5b50565b6131c9816130ce565b81146131d457600080fd5b50565b6131e0816130f8565b81146131eb57600080fd5b5056fea264697066735822122008a96bca00c55475dca1c64c474cd9553e4e216aef05f9192b4f3f3fc6d9284364736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "328:3834:6:-:0;;;321:4:3;296:29;;;;;;;;;;;;;;;;;;;;436:6;409:33;;553:3;515:41;;625:2;589:38;;969:4;947:26;;;;;;;;;;;;;;;;;;;;1004:4;979:29;;;;;;;;;;;;;;;;;;;;1065:4;1034:35;;1239:42;1201:82;;;;;;;;;;;;;;;;;;;;2115:24;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2092:47;;;;;;;;;;;;;;;;;;;;2173:2;2145:30;;465:42:6;427:82;;;;;;;;;;;;;;;;;;;;761:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;835:17;816:9;;:37;;;;;;;;;;;;;;;;;;878:1;863:12;:16;;;;761:125;328:3834;;;;;;;;;;:::o;7:143:9:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:309::-;;609:67;673:2;668:3;609:67;:::i;:::-;602:74;;706:13;702:1;697:3;693:11;686:34;746:2;741:3;737:12;730:19;;592:163;;;:::o;761:419::-;;965:2;954:9;950:18;942:26;;1014:9;1008:4;1004:20;1000:1;989:9;985:17;978:47;1042:131;1168:4;1042:131;:::i;:::-;1034:139;;932:248;;;:::o;1186:169::-;;1304:6;1299:3;1292:19;1344:4;1339:3;1335:14;1320:29;;1282:73;;;;:::o;1361:96::-;;1427:24;1445:5;1427:24;:::i;:::-;1416:35;;1406:51;;;:::o;1463:126::-;;1540:42;1533:5;1529:54;1518:65;;1508:81;;;:::o;1595:122::-;1668:24;1686:5;1668:24;:::i;:::-;1661:5;1658:35;1648:2;;1707:1;1704;1697:12;1648:2;1638:79;:::o;328:3834:6:-;;;;;;;",
  "deployedSourceMap": "328:3834:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3702:458;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1766:686;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;245:45:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;220:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;688:39:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5431:213:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4640:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6751:155;;;:::i;:::-;;411:1169:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1303:297:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;4739:99:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2771:818:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6495:250:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3702:458:6;3768:19;3790:6;:14;3797:6;3790:14;;;;;;;;;;;3768:36;;3849:5;:12;;;;;;;;;;;;3835:26;;:10;:26;;;3814:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;3943:22;:5;:12;;;:22;3935:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4074:26;:5;:12;;:26;;;;4115:38;4133:6;4115:38;;;;;;:::i;:::-;;;;;;;;3702:458;;:::o;1766:686::-;2041:1;2024:13;;:18;2020:426;;;2058:13;:11;:13::i;:::-;2020:426;;;2144:7;2109:9;;;;;;;;;;;:19;;;2129:10;2109:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;2101:51;;;;;;2189:153;;;;;;;;2221:10;2189:153;;;;;;2257:7;2189:153;;;;2289:6;2189:153;;;;;;;;2166:6;:20;2173:12;;2166:20;;;;;;;;;;;:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2372:1;2356:12;;:17;;;;;;;:::i;:::-;;;;;;;;2392:43;2425:1;2410:12;;:16;;;;:::i;:::-;2392:43;;;;;;:::i;:::-;;;;;;;;2020:426;1766:686;;:::o;245:45:3:-;279:11;245:45;:::o;220:19::-;;;;:::o;688:39:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5431:213:0:-;5472:7;5526:1;5499:28;;:11;:23;5511:10;5499:23;;;;;;;;;;;;;;;;:28;;5491:37;;;;;;5538:22;5563:11;:23;5575:10;5563:23;;;;;;;;;;;;;;;;5538:48;;5603:34;5622:14;5603:18;:34::i;:::-;5596:41;;;5431:213;:::o;4640:93:3:-;4689:4;4712:14;;;;;;;;;;;4705:21;;4640:93;:::o;6751:155::-;:::o;411:1169:0:-;571:27;:25;:27::i;:::-;563:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;664:1;637:28;;:11;:23;649:10;637:23;;;;;;;;;;;;;;;;:28;629:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;895:23;:37;919:12;895:37;;;;;;;;;;;;;;;;;;;;;894:38;:83;;;;;937:26;:40;964:12;937:40;;;;;;;;;;;;;;;;;;;;;936:41;894:83;886:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;1033:12;1007:11;:23;1019:10;1007:23;;;;;;;;;;;;;;;:38;;;;1083:10;1055:11;:25;1067:12;1055:25;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1103:16;1131:14;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1122:8;:44;;;;:::i;:::-;1103:63;;1176:15;1205:14;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1194:8;:46;;;;:::i;:::-;1176:64;;1332:13;;;;;;;;;;;:26;;;1359:10;1379:4;1386:7;1332:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1404:70;1428:12;1442:7;1451:4;1457;1463:10;1404:23;:70::i;:::-;1484:36;1499:10;1511:8;1484:14;:36::i;:::-;1535:38;1550:12;1564:8;1535:38;;;;;;;:::i;:::-;;;;;;;;411:1169;;;;:::o;1303:297:6:-;1381:7;1390;1399;1408;1448:12;;1439:6;:21;:36;;;;;1474:1;1464:6;:11;;1439:36;1431:45;;;;;;1486:18;1507:6;:14;1514:6;1507:14;;;;;;;;;;;1486:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1539:5;:12;;;1553:5;:12;;;1567:5;:11;;;1580:5;:12;;;1531:62;;;;;;;;;1303:297;;;;;:::o;4739:99:3:-;4791:4;4814:17;;;;;;;;;;;4807:24;;4739:99;:::o;2771:818:6:-;2932:28;2954:5;2932:21;:28::i;:::-;2987:12;;2978:6;:21;:36;;;;;3013:1;3003:6;:11;;2978:36;2970:45;;;;;;3044:1;3034:7;:11;3026:20;;;;;;3056:19;3078:6;:14;3085:6;3078:14;;;;;;;;;;;3056:36;;3116:5;:12;;;3106:7;:22;3102:75;;;3154:5;:12;;;3144:22;;3102:75;3194:22;:5;:12;;;:22;3186:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3297:13;;;;;;;;;;;:26;;;3324:10;3336:5;:12;;;;;;;;;;;;3360:5;:11;;;3350:7;:21;;;;:::i;:::-;3297:75;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3382:76;3410:10;3422:7;3431:5;:12;;;;;;;;;;;;3445;3382:27;:76::i;:::-;3468:25;:5;:12;;:25;;;;3508:37;3526:6;3508:37;;;;;;:::i;:::-;;;;;;;;3555:27;3577:4;3555:21;:27::i;:::-;2771:818;;;;:::o;6495:250:3:-;6531:7;6550:12;279:11;6584:4;;6566:15;:22;;;;:::i;:::-;6565:36;;6550:51;;6614:7;:19;;;;;6625:8;;;;;;;;;;;6614:19;6611:88;;;6656:1;6649:4;:8;;;;6671:17;:15;:17::i;:::-;6611:88;6734:4;;6716:15;:22;;;;:::i;:::-;6709:29;;;6495:250;:::o;892:301:6:-;938:9;933:228;957:12;;953:1;:16;933:228;;;990:19;1012:6;:9;1019:1;1012:9;;;;;;;;;;;990:31;;1058:1;1035:5;:12;;;:25;;;;;;;;;;;;;;;;;;1089:1;1074:5;:12;;:16;;;;1118:1;1104:5;:11;;:15;;;;1133:17;:5;:12;;:17;;;;933:228;971:3;;;;;:::i;:::-;;;;933:228;;;;1185:1;1170:12;:16;;;;892:301::o;4522:112:3:-;4582:7;4608:9;:19;4618:8;4608:19;;;;;;;;;;;;4601:26;;4522:112;;;:::o;2457:1622::-;2619:1;2588:33;;:9;:19;2598:8;2588:19;;;;;;;;;;;;;;;;;;;;;:33;;;:66;;;;2648:6;2625:29;;:9;:19;2635:8;2625:19;;;;;;;;;;;;;;;;;;;;;:29;;;2588:66;2580:75;;;;;;2669:8;:37;;;;;2682:14;:24;2697:8;2682:24;;;;;;;;;;;;;;;;;;;;;2681:25;2669:37;2665:139;;;2722:11;2739:8;2722:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2789:4;2762:14;:24;2777:8;2762:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2665:139;2817:8;2813:1172;;;2854:1;2845:6;:10;2841:662;;;2875:12;2910:4;2901:6;2890:8;;:17;;;;:::i;:::-;:24;;;;:::i;:::-;2875:39;;2932:14;2958:5;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2949:6;:35;;;;:::i;:::-;2932:52;;3012:4;3002:14;;;;;:::i;:::-;;;3042:8;:49;;;;3090:1;3080:6;3054:5;;;;;;;;;;;:15;;;3070:6;3054:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;;;;:::i;:::-;:37;;3042:49;3034:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;3151:8;3147:342;;;3196:4;3183:9;;:17;;;;;;;:::i;:::-;;;;;;;;3248:4;3222:12;:22;3235:8;3222:22;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;3274:21;3280:6;3288;3274:5;:21::i;:::-;3147:342;;;3371:4;3358:9;;:17;;;;;;;:::i;:::-;;;;;;;;3423:4;3397:12;:22;3410:8;3397:22;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;3449:21;3455:6;3463;3449:5;:21::i;:::-;3147:342;2841:662;;;2813:1172;;;3542:17;:27;3560:8;3542:27;;;;;;;;;;;;;;;;;;;;;3541:28;3533:37;;;;;;3584:14;3604:8;3584:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3657:4;3627:17;:27;3645:8;3627:27;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3684:1;3675:10;;2813:1172;4016:6;3994:9;:19;4004:8;3994:19;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;4032:40;4045:8;4055:6;4063:8;4032:12;:40::i;:::-;2457:1622;;;;;:::o;6912:96::-;6976:5;;;;;;;;;;;:11;;;6988:4;6994:6;6976:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6912:96;;:::o;4882:72::-;4944:3;4933:8;;:14;;;;;;;;;;;;;;;;;;4882:72;:::o;3632:1793:0:-;3870:1;3861:5;:10;;3853:19;;;;;;3914:1;3890:25;;:11;:20;3902:7;3890:20;;;;;;;;;;;;;;;;:25;;3882:34;;;;;;3926:21;3950:14;;;;;;;;;;;:24;;;3975:8;3950:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3926:58;;3994:22;4019:14;;;;;;;;;;;:24;;;4044:7;4019:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3994:58;;4095:1;4086:5;4070:13;:21;;;;:::i;:::-;:26;;4062:35;;;;;;4141:1;4132:5;4115:14;:22;;;;:::i;:::-;:27;;4107:36;;;;;;4191:1;4166:26;;:11;:21;4178:8;4166:21;;;;;;;;;;;;;;;;:26;4162:552;;;4297:23;:37;4321:12;4297:37;;;;;;;;;;;;;;;;;;;;;4296:38;:83;;;;;4339:26;:40;4366:12;4339:40;;;;;;;;;;;;;;;;;;;;;4338:41;4296:83;4288:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;4437:12;4413:11;:21;4425:8;4413:21;;;;;;;;;;;;;;;:36;;;;4491:10;4463:11;:25;4475:12;4463:25;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;4515:11;4532:12;4515:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4560:64;4584:12;4598:1;4601:4;4607;4613:10;4560:23;:64::i;:::-;4162:552;;;4679:11;:23;4691:10;4679:23;;;;;;;;;;;;;;;;4663:12;:39;4655:48;;;;;;4162:552;4995:30;5010:7;5019:5;4995:14;:30::i;:::-;5035:31;5050:8;5060:5;5035:14;:31::i;:::-;5076:110;5100:11;:20;5112:7;5100:20;;;;;;;;;;;;;;;;5128:14;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5122:5;:41;;;;:::i;:::-;5165:5;5172:4;5178:7;5076:23;:110::i;:::-;5196;5220:11;:21;5232:8;5220:21;;;;;;;;;;;;;;;;5249:14;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5243:5;:41;;;;:::i;:::-;5286:4;5292;5298:7;5196:23;:110::i;:::-;5321:35;5336:12;5350:5;5321:35;;;;;;;:::i;:::-;;;;;;;;5371:47;5386:11;:20;5398:7;5386:20;;;;;;;;;;;;;;;;5412:5;5408:1;:9;;;;:::i;:::-;5371:47;;;;;;;:::i;:::-;;;;;;;;3632:1793;;;;;;:::o;5153:1336:3:-;5294:13;:11;:13::i;:::-;5322:9;5317:612;5341:11;:18;;;;5337:1;:22;5317:612;;;5380:13;5396:25;5406:11;5418:1;5406:14;;;;;;;;;;;;;;;;;;;;;;;;5396:9;:25::i;:::-;5380:41;;5452:1;5443:5;:10;;5435:19;;;;;;5480:1;5472:5;:9;5468:95;;;5501:4;;;;;;;;;;;:13;;;5515:9;:25;5525:11;5537:1;5525:14;;;;;;;;;;;;;;;;;;;;;;;;5515:25;;;;;;;;;;;;;;;;;;;;;5542:5;5501:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5468:95;5604:1;5576:9;:25;5586:11;5598:1;5586:14;;;;;;;;;;;;;;;;;;;;;;;;5576:25;;;;;;;;;;;:29;;;;5619:16;5638:9;:25;5648:11;5660:1;5648:14;;;;;;;;;;;;;;;;;;;;;;;;5638:25;;;;;;;;;;;;;;;;;;;;;5619:44;;5677:20;5700:5;;;;;;;;;;;:15;;;5716:8;5700:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5677:48;;5739:29;5745:8;5755:12;5739:5;:29::i;:::-;5818:1;5782:9;:25;5792:11;5804:1;5792:14;;;;;;;;;;;;;;;;;;;;;;;;5782:25;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;5867:5;5834:14;:30;5849:11;5861:1;5849:14;;;;;;;;;;;;;;;;;;;;;;;;5834:30;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;5917:1;5886:12;:28;5899:11;5911:1;5899:14;;;;;;;;;;;;;;;;;;;;;;;;5886:28;;;;;;;;;;;:32;;;;5317:612;;;5361:3;;;;;:::i;:::-;;;;5317:612;;;;5945:11;;5938:18;;;;:::i;:::-;5972:9;5967:419;5991:14;:21;;;;5987:1;:25;5967:419;;;6037:10;:29;6048:14;6063:1;6048:17;;;;;;;;;;;;;;;;;;;;;;;;6037:29;;;;;;;;;;;;;;;;;;;;;6033:133;;;6086:4;;;;;;;;;;;:13;;;6100:9;:28;6110:14;6125:1;6110:17;;;;;;;;;;;;;;;;;;;;;;;;6100:28;;;;;;;;;;;;;;;;;;;;;6130:20;;6086:65;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6033:133;6210:1;6179:9;:28;6189:14;6204:1;6189:17;;;;;;;;;;;;;;;;;;;;;;;;6179:28;;;;;;;;;;;:32;;;;6264:1;6225:9;:28;6235:14;6250:1;6235:17;;;;;;;;;;;;;;;;;;;;;;;;6225:28;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;6319:5;6280:17;:36;6298:14;6313:1;6298:17;;;;;;;;;;;;;;;;;;;;;;;;6280:36;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;6370:5;6338:10;:29;6349:14;6364:1;6349:17;;;;;;;;;;;;;;;;;;;;;;;;6338:29;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6014:3;;;;;:::i;:::-;;;;5967:419;;;;6402:14;;6395:21;;;;:::i;:::-;6444:4;6427:14;;:21;;;;;;;;;;;;;;;;;;6478:4;6458:17;;:24;;;;;;;;;;;;;;;;;;5153:1336::o;7014:96::-;7078:5;;;;;;;;;;;:11;;;7090:4;7096:6;7078:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7014:96;;:::o;4116:400::-;4210:8;4206:304;;;4238:17;:27;4256:8;4238:27;;;;;;;;;;;;;;;;;;;;;:42;;;;;4279:1;4269:6;:11;;4238:42;4234:156;;;4309:10;:20;4320:8;4309:20;;;;;;;;;;;;;;;;;;;;;4308:21;4300:30;;;;;;4371:4;4348:10;:20;4359:8;4348:20;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;4234:156;4426:6;4403:9;:19;4413:8;4403:19;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;4206:304;;;4493:6;4470:9;:19;4480:8;4470:19;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;4206:304;4116:400;;;:::o;7428:593::-;7500:14;7583:16;;7562:11;:18;;;;:37;;;;:::i;:::-;7541:18;;7517:14;:21;;;;:42;;;;:::i;:::-;:82;;;;:::i;:::-;7500:99;;7614:9;7609:297;7633:11;:18;;;;7629:1;:22;7609:297;;;7743:23;7788:5;;;;;;;;;;;:15;;;7804:9;:25;7814:11;7826:1;7814:14;;;;;;;;;;;;;;;;;;;;;;;;7804:25;;;;;;;;;;;;;;;;;;;;;7788:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7769:16;;:61;;;;:::i;:::-;7743:87;;7844:51;7857:11;7869:1;7857:14;;;;;;;;;;;;;;;;;;;;;;;;7873:15;7890:4;7844:12;:51::i;:::-;7609:297;7653:3;;;;;:::i;:::-;;;;7609:297;;;;7933:1;7923:6;:11;;7915:20;;;;;;7958:1;7949:6;:10;7945:70;;;7975:29;7991:6;7999:4;7975:15;:29::i;:::-;7945:70;7428:593;:::o;7116:257::-;7196:8;7191:176;;7249:1;7239:6;7228:8;;:17;;;;:::i;:::-;:22;;7220:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;7302:6;7290:8;;:18;;;;;;;:::i;:::-;;;;;;;;7191:176;;;7350:6;7338:8;;:18;;;;;;;:::i;:::-;;;;;;;;7191:176;7116:257;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:137:9:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:139::-;;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;202:87;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:278::-;;705:2;693:9;684:7;680:23;676:32;673:2;;;721:1;718;711:12;673:2;764:1;789:61;842:7;833:6;822:9;818:22;789:61;:::i;:::-;779:71;;735:125;663:204;;;;:::o;873:262::-;;981:2;969:9;960:7;956:23;952:32;949:2;;;997:1;994;987:12;949:2;1040:1;1065:53;1110:7;1101:6;1090:9;1086:22;1065:53;:::i;:::-;1055:63;;1011:117;939:196;;;;:::o;1141:284::-;;1260:2;1248:9;1239:7;1235:23;1231:32;1228:2;;;1276:1;1273;1266:12;1228:2;1319:1;1344:64;1400:7;1391:6;1380:9;1376:22;1344:64;:::i;:::-;1334:74;;1290:128;1218:207;;;;:::o;1431:407::-;;;1556:2;1544:9;1535:7;1531:23;1527:32;1524:2;;;1572:1;1569;1562:12;1524:2;1615:1;1640:53;1685:7;1676:6;1665:9;1661:22;1640:53;:::i;:::-;1630:63;;1586:117;1742:2;1768:53;1813:7;1804:6;1793:9;1789:22;1768:53;:::i;:::-;1758:63;;1713:118;1514:324;;;;;:::o;1844:407::-;;;1969:2;1957:9;1948:7;1944:23;1940:32;1937:2;;;1985:1;1982;1975:12;1937:2;2028:1;2053:53;2098:7;2089:6;2078:9;2074:22;2053:53;:::i;:::-;2043:63;;1999:117;2155:2;2181:53;2226:7;2217:6;2206:9;2202:22;2181:53;:::i;:::-;2171:63;;2126:118;1927:324;;;;;:::o;2257:552::-;;;;2399:2;2387:9;2378:7;2374:23;2370:32;2367:2;;;2415:1;2412;2405:12;2367:2;2458:1;2483:53;2528:7;2519:6;2508:9;2504:22;2483:53;:::i;:::-;2473:63;;2429:117;2585:2;2611:53;2656:7;2647:6;2636:9;2632:22;2611:53;:::i;:::-;2601:63;;2556:118;2713:2;2739:53;2784:7;2775:6;2764:9;2760:22;2739:53;:::i;:::-;2729:63;;2684:118;2357:452;;;;;:::o;2815:118::-;2902:24;2920:5;2902:24;:::i;:::-;2897:3;2890:37;2880:53;;:::o;2939:109::-;3020:21;3035:5;3020:21;:::i;:::-;3015:3;3008:34;2998:50;;:::o;3054:118::-;3141:24;3159:5;3141:24;:::i;:::-;3136:3;3129:37;3119:53;;:::o;3178:168::-;3329:10;3324:3;3317:23;3307:39;:::o;3352:316::-;;3515:67;3579:2;3574:3;3515:67;:::i;:::-;3508:74;;3612:20;3608:1;3603:3;3599:11;3592:41;3659:2;3654:3;3650:12;3643:19;;3498:170;;;:::o;3674:370::-;;3837:67;3901:2;3896:3;3837:67;:::i;:::-;3830:74;;3934:34;3930:1;3925:3;3921:11;3914:55;4000:8;3995:2;3990:3;3986:12;3979:30;4035:2;4030:3;4026:12;4019:19;;3820:224;;;:::o;4050:365::-;;4213:67;4277:2;4272:3;4213:67;:::i;:::-;4206:74;;4310:34;4306:1;4301:3;4297:11;4290:55;4376:3;4371:2;4366:3;4362:12;4355:25;4406:2;4401:3;4397:12;4390:19;;4196:219;;;:::o;4421:312::-;;4584:67;4648:2;4643:3;4584:67;:::i;:::-;4577:74;;4681:16;4677:1;4672:3;4668:11;4661:37;4724:2;4719:3;4715:12;4708:19;;4567:166;;;:::o;4739:169::-;4890:11;4885:3;4878:24;4868:40;:::o;4914:314::-;;5077:67;5141:2;5136:3;5077:67;:::i;:::-;5070:74;;5174:18;5170:1;5165:3;5161:11;5154:39;5219:2;5214:3;5210:12;5203:19;;5060:168;;;:::o;5234:319::-;;5397:67;5461:2;5456:3;5397:67;:::i;:::-;5390:74;;5494:23;5490:1;5485:3;5481:11;5474:44;5544:2;5539:3;5535:12;5528:19;;5380:173;;;:::o;5559:164::-;5710:6;5705:3;5698:19;5688:35;:::o;5729:318::-;;5892:67;5956:2;5951:3;5892:67;:::i;:::-;5885:74;;5989:22;5985:1;5980:3;5976:11;5969:43;6038:2;6033:3;6029:12;6022:19;;5875:172;;;:::o;6053:118::-;6140:24;6158:5;6140:24;:::i;:::-;6135:3;6128:37;6118:53;;:::o;6177:222::-;;6308:2;6297:9;6293:18;6285:26;;6321:71;6389:1;6378:9;6374:17;6365:6;6321:71;:::i;:::-;6275:124;;;;:::o;6405:442::-;;6592:2;6581:9;6577:18;6569:26;;6605:71;6673:1;6662:9;6658:17;6649:6;6605:71;:::i;:::-;6686:72;6754:2;6743:9;6739:18;6730:6;6686:72;:::i;:::-;6768;6836:2;6825:9;6821:18;6812:6;6768:72;:::i;:::-;6559:288;;;;;;:::o;6853:332::-;;7012:2;7001:9;6997:18;6989:26;;7025:71;7093:1;7082:9;7078:17;7069:6;7025:71;:::i;:::-;7106:72;7174:2;7163:9;7159:18;7150:6;7106:72;:::i;:::-;6979:206;;;;;:::o;7191:553::-;;7406:3;7395:9;7391:19;7383:27;;7420:71;7488:1;7477:9;7473:17;7464:6;7420:71;:::i;:::-;7501:72;7569:2;7558:9;7554:18;7545:6;7501:72;:::i;:::-;7583;7651:2;7640:9;7636:18;7627:6;7583:72;:::i;:::-;7665;7733:2;7722:9;7718:18;7709:6;7665:72;:::i;:::-;7373:371;;;;;;;:::o;7750:210::-;;7875:2;7864:9;7860:18;7852:26;;7888:65;7950:1;7939:9;7935:17;7926:6;7888:65;:::i;:::-;7842:118;;;;:::o;7966:332::-;;8125:2;8114:9;8110:18;8102:26;;8138:71;8206:1;8195:9;8191:17;8182:6;8138:71;:::i;:::-;8219:72;8287:2;8276:9;8272:18;8263:6;8219:72;:::i;:::-;8092:206;;;;;:::o;8304:419::-;;8508:2;8497:9;8493:18;8485:26;;8557:9;8551:4;8547:20;8543:1;8532:9;8528:17;8521:47;8585:131;8711:4;8585:131;:::i;:::-;8577:139;;8475:248;;;:::o;8729:419::-;;8933:2;8922:9;8918:18;8910:26;;8982:9;8976:4;8972:20;8968:1;8957:9;8953:17;8946:47;9010:131;9136:4;9010:131;:::i;:::-;9002:139;;8900:248;;;:::o;9154:419::-;;9358:2;9347:9;9343:18;9335:26;;9407:9;9401:4;9397:20;9393:1;9382:9;9378:17;9371:47;9435:131;9561:4;9435:131;:::i;:::-;9427:139;;9325:248;;;:::o;9579:419::-;;9783:2;9772:9;9768:18;9760:26;;9832:9;9826:4;9822:20;9818:1;9807:9;9803:17;9796:47;9860:131;9986:4;9860:131;:::i;:::-;9852:139;;9750:248;;;:::o;10004:419::-;;10208:2;10197:9;10193:18;10185:26;;10257:9;10251:4;10247:20;10243:1;10232:9;10228:17;10221:47;10285:131;10411:4;10285:131;:::i;:::-;10277:139;;10175:248;;;:::o;10429:419::-;;10633:2;10622:9;10618:18;10610:26;;10682:9;10676:4;10672:20;10668:1;10657:9;10653:17;10646:47;10710:131;10836:4;10710:131;:::i;:::-;10702:139;;10600:248;;;:::o;10854:419::-;;11058:2;11047:9;11043:18;11035:26;;11107:9;11101:4;11097:20;11093:1;11082:9;11078:17;11071:47;11135:131;11261:4;11135:131;:::i;:::-;11127:139;;11025:248;;;:::o;11279:222::-;;11410:2;11399:9;11395:18;11387:26;;11423:71;11491:1;11480:9;11476:17;11467:6;11423:71;:::i;:::-;11377:124;;;;:::o;11507:458::-;;11729:2;11718:9;11714:18;11706:26;;11742:71;11810:1;11799:9;11795:17;11786:6;11742:71;:::i;:::-;11823:135;11954:2;11943:9;11939:18;11823:135;:::i;:::-;11696:269;;;;:::o;11971:458::-;;12193:2;12182:9;12178:18;12170:26;;12206:71;12274:1;12263:9;12259:17;12250:6;12206:71;:::i;:::-;12287:135;12418:2;12407:9;12403:18;12287:135;:::i;:::-;12160:269;;;;:::o;12435:458::-;;12657:2;12646:9;12642:18;12634:26;;12670:71;12738:1;12727:9;12723:17;12714:6;12670:71;:::i;:::-;12751:135;12882:2;12871:9;12867:18;12751:135;:::i;:::-;12624:269;;;;:::o;12899:169::-;;13017:6;13012:3;13005:19;13057:4;13052:3;13048:14;13033:29;;12995:73;;;;:::o;13074:305::-;;13133:20;13151:1;13133:20;:::i;:::-;13128:25;;13167:20;13185:1;13167:20;:::i;:::-;13162:25;;13321:1;13253:66;13249:74;13246:1;13243:81;13240:2;;;13327:18;;:::i;:::-;13240:2;13371:1;13368;13364:9;13357:16;;13118:261;;;;:::o;13385:185::-;;13442:20;13460:1;13442:20;:::i;:::-;13437:25;;13476:20;13494:1;13476:20;:::i;:::-;13471:25;;13515:1;13505:2;;13520:18;;:::i;:::-;13505:2;13562:1;13559;13555:9;13550:14;;13427:143;;;;:::o;13576:348::-;;13639:20;13657:1;13639:20;:::i;:::-;13634:25;;13673:20;13691:1;13673:20;:::i;:::-;13668:25;;13861:1;13793:66;13789:74;13786:1;13783:81;13778:1;13771:9;13764:17;13760:105;13757:2;;;13868:18;;:::i;:::-;13757:2;13916:1;13913;13909:9;13898:20;;13624:300;;;;:::o;13930:191::-;;13990:20;14008:1;13990:20;:::i;:::-;13985:25;;14024:20;14042:1;14024:20;:::i;:::-;14019:25;;14063:1;14060;14057:8;14054:2;;;14068:18;;:::i;:::-;14054:2;14113:1;14110;14106:9;14098:17;;13975:146;;;;:::o;14127:96::-;;14193:24;14211:5;14193:24;:::i;:::-;14182:35;;14172:51;;;:::o;14229:90::-;;14306:5;14299:13;14292:21;14281:32;;14271:48;;;:::o;14325:77::-;;14391:5;14380:16;;14370:32;;;:::o;14408:126::-;;14485:42;14478:5;14474:54;14463:65;;14453:81;;;:::o;14540:77::-;;14606:5;14595:16;;14585:32;;;:::o;14623:233::-;;14685:24;14703:5;14685:24;:::i;:::-;14676:33;;14731:66;14724:5;14721:77;14718:2;;;14801:18;;:::i;:::-;14718:2;14848:1;14841:5;14837:13;14830:20;;14666:190;;;:::o;14862:180::-;14910:77;14907:1;14900:88;15007:4;15004:1;14997:15;15031:4;15028:1;15021:15;15048:180;15096:77;15093:1;15086:88;15193:4;15190:1;15183:15;15217:4;15214:1;15207:15;15234:116;15304:21;15319:5;15304:21;:::i;:::-;15297:5;15294:32;15284:2;;15340:1;15337;15330:12;15284:2;15274:76;:::o;15356:122::-;15429:24;15447:5;15429:24;:::i;:::-;15422:5;15419:35;15409:2;;15468:1;15465;15458:12;15409:2;15399:79;:::o;15484:122::-;15557:24;15575:5;15557:24;:::i;:::-;15550:5;15547:35;15537:2;;15596:1;15593;15586:12;15537:2;15527:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >= 0.8.0;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {InvestorFactory} from \"./InvestorFactory.sol\";\nimport {Platform} from \"./Platform.sol\";\n\n// ADAPTED FROM https://github.com/HQ20/contracts/blob/master/contracts/classifieds/Classifieds.sol\n\ncontract Market is InvestorFactory {\n    event TradeStatusChange(uint256 ad, bytes32 status);\n\n    IERC20 currencyToken = IERC20(address(0xdAC17F958D2ee523a2206206994597C13D831ec7));\n    IERC20 itemToken;\n\n    struct Trade {\n        address poster;\n        uint256 amount;\n        uint256 price;\n        bytes32 status; // Open, Executed, Cancelled\n    }\n\n    mapping(uint256 => Trade) public trades;\n\n    uint256 tradeCounter;\n\n    constructor (address _itemTokenAddress) \n    {\n        itemToken = IERC20(_itemTokenAddress);\n        tradeCounter = 0;\n    }\n\n    function resetTrades() private {\n        for (uint256 i = 0; i < tradeCounter; i++) {\n            Trade storage trade = trades[i];\n            trade.poster = address(0);\n            trade.amount = 0;\n            trade.price = 0;\n            trade.status = \"\";\n        }\n        tradeCounter = 0;\n    }\n\n    /**\n     * @dev Returns the details for a trade.\n     * @param _trade The id for the trade.\n     */\n    function getTrade(uint256 _trade)\n        public\n        view\n        returns(address, uint256, uint256, bytes32)\n    {\n        require(_trade < tradeCounter && _trade >= 0);\n        Trade memory trade = trades[_trade];\n        return (trade.poster, trade.amount, trade.price, trade.status);\n    }\n\n    /**\n     * @dev Opens a new trade. \n     * @param _amount Maximum of the number of tokens being sold\n     * @param _price The price for each token.\n     */\n    function openTrade(uint256 _amount, uint256 _price)\n        public\n    {\n        // don't transfer right away, as that interferes with the loan computations\n        // simply need to ensure that things don't get overwritten/dangered when writing\n        if (Platform.time == 0) {\n            resetTrades();\n        } else{\n            require(itemToken.balanceOf(msg.sender) >= _amount);\n            trades[tradeCounter] = Trade({\n                poster: msg.sender,\n                amount: _amount,\n                price: _price,\n                status: \"Open\"\n            });\n            tradeCounter += 1;\n            emit TradeStatusChange(tradeCounter - 1, \"Open\");\n        }\n    }\n\n    /**\n     * @dev Executes a trade. Must have approved this contract to transfer the\n     * amount of currency specified to the poster. Transfers ownership of the\n     * item to the filler.\n     * @param _amount The amount of tokens to buy at that price\n     * @param _trade The id of an existing trade\n     */\n    function executeTrade(uint256 _amount, uint256 _trade, bytes32 hashUsername) public\n    {\n        // need to prompt the buyer to give the spender tokens\n        Platform._changeReset(false);\n        require(_trade < tradeCounter && _trade >= 0); \n        require(_amount > 0);\n        Trade storage trade = trades[_trade];\n        if (_amount > trade.amount) {\n            _amount = trade.amount;\n        }\n        require(trade.status == \"Open\", \"Trade is not Open.\");\n\n        // assuming allowance has been granted\n        currencyToken.transferFrom(msg.sender, trade.poster, _amount * trade.price);\n        InvestorFactory.changeStake(msg.sender, _amount, trade.poster, hashUsername);\n        trade.status = \"Executed\";\n        emit TradeStatusChange(_trade, \"Executed\");\n        Platform._changeReset(true);\n    }\n\n    /**\n     * @dev Cancels a trade by the poster.\n     * @param _trade The trade to be cancelled.\n     */\n    function cancelTrade(uint256 _trade)\n        public\n    {\n        Trade storage trade = trades[_trade];\n        require(\n            msg.sender == trade.poster,\n            \"Trade can be cancelled only by poster.\"\n        );\n        require(trade.status == \"Open\", \"Trade is not Open.\");\n        // itemToken.transferFrom(address(this), trade.poster, trade.item);\n        trade.status = \"Cancelled\";\n        emit TradeStatusChange(_trade, \"Cancelled\");\n    }\n}",
  "sourcePath": "/Users/praneet/college/others/RiskSmartContract/contracts/Trading.sol",
  "ast": {
    "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/Trading.sol",
    "exportedSymbols": {
      "IERC20": [
        2519
      ],
      "InvestorFactory": [
        587
      ],
      "Market": [
        2348
      ],
      "Platform": [
        1531
      ]
    },
    "id": 2349,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1999,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:25:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2001,
        "nodeType": "ImportDirective",
        "scope": 2349,
        "sourceUnit": 2520,
        "src": "59:70:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2000,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "67:6:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/InvestorFactory.sol",
        "file": "./InvestorFactory.sol",
        "id": 2003,
        "nodeType": "ImportDirective",
        "scope": 2349,
        "sourceUnit": 588,
        "src": "130:54:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2002,
              "name": "InvestorFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "138:15:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/Platform.sol",
        "file": "./Platform.sol",
        "id": 2005,
        "nodeType": "ImportDirective",
        "scope": 2349,
        "sourceUnit": 1532,
        "src": "185:40:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2004,
              "name": "Platform",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "193:8:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2006,
              "name": "InvestorFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 587,
              "src": "347:15:6"
            },
            "id": 2007,
            "nodeType": "InheritanceSpecifier",
            "src": "347:15:6"
          }
        ],
        "contractDependencies": [
          587,
          1531
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2348,
        "linearizedBaseContracts": [
          2348,
          587,
          1531
        ],
        "name": "Market",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 2013,
            "name": "TradeStatusChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2009,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ad",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "393:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2011,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "405:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "392:28:6"
            },
            "src": "369:52:6"
          },
          {
            "constant": false,
            "id": 2022,
            "mutability": "mutable",
            "name": "currencyToken",
            "nodeType": "VariableDeclaration",
            "scope": 2348,
            "src": "427:82:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2519",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2015,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2014,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2519,
                "src": "427:6:6"
              },
              "referencedDeclaration": 2519,
              "src": "427:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2519",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307864414331374639353844326565353233613232303632303639393435393743313344383331656337",
                      "id": 2019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "465:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 2018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "457:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 2017,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "457:7:6",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 2020,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "457:51:6",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 2016,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2519,
                "src": "450:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2519_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 2021,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "450:59:6",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2519",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2025,
            "mutability": "mutable",
            "name": "itemToken",
            "nodeType": "VariableDeclaration",
            "scope": 2348,
            "src": "515:16:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2519",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2024,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2023,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2519,
                "src": "515:6:6"
              },
              "referencedDeclaration": 2519,
              "src": "515:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2519",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Market.Trade",
            "id": 2034,
            "members": [
              {
                "constant": false,
                "id": 2027,
                "mutability": "mutable",
                "name": "poster",
                "nodeType": "VariableDeclaration",
                "scope": 2034,
                "src": "561:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2026,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "561:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2029,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 2034,
                "src": "585:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2028,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "585:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2031,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 2034,
                "src": "609:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2030,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "609:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2033,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 2034,
                "src": "632:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2032,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "632:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "nodeType": "StructDefinition",
            "scope": 2348,
            "src": "538:144:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1e6c598e",
            "id": 2039,
            "mutability": "mutable",
            "name": "trades",
            "nodeType": "VariableDeclaration",
            "scope": 2348,
            "src": "688:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
              "typeString": "mapping(uint256 => struct Market.Trade)"
            },
            "typeName": {
              "id": 2038,
              "keyType": {
                "id": 2035,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "696:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "688:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                "typeString": "mapping(uint256 => struct Market.Trade)"
              },
              "valueType": {
                "id": 2037,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2036,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2034,
                  "src": "707:5:6"
                },
                "referencedDeclaration": 2034,
                "src": "707:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                  "typeString": "struct Market.Trade"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2041,
            "mutability": "mutable",
            "name": "tradeCounter",
            "nodeType": "VariableDeclaration",
            "scope": 2348,
            "src": "734:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2040,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "734:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2056,
              "nodeType": "Block",
              "src": "806:80:6",
              "statements": [
                {
                  "expression": {
                    "id": 2050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2046,
                      "name": "itemToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2025,
                      "src": "816:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2519",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2048,
                          "name": "_itemTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "835:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2047,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2519,
                        "src": "828:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2519_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "828:25:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2519",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "816:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2519",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2051,
                  "nodeType": "ExpressionStatement",
                  "src": "816:37:6"
                },
                {
                  "expression": {
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2052,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "863:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "878:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "863:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2055,
                  "nodeType": "ExpressionStatement",
                  "src": "863:16:6"
                }
              ]
            },
            "id": 2057,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "_itemTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "774:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "773:27:6"
            },
            "returnParameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "806:0:6"
            },
            "scope": 2348,
            "src": "761:125:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2110,
              "nodeType": "Block",
              "src": "923:270:6",
              "statements": [
                {
                  "body": {
                    "id": 2104,
                    "nodeType": "Block",
                    "src": "976:185:6",
                    "statements": [
                      {
                        "assignments": [
                          2072
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2072,
                            "mutability": "mutable",
                            "name": "trade",
                            "nodeType": "VariableDeclaration",
                            "scope": 2104,
                            "src": "990:19:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                              "typeString": "struct Market.Trade"
                            },
                            "typeName": {
                              "id": 2071,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2070,
                                "name": "Trade",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2034,
                                "src": "990:5:6"
                              },
                              "referencedDeclaration": 2034,
                              "src": "990:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2076,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2073,
                            "name": "trades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "1012:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                              "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                            }
                          },
                          "id": 2075,
                          "indexExpression": {
                            "id": 2074,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2061,
                            "src": "1019:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1012:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_storage",
                            "typeString": "struct Market.Trade storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "990:31:6"
                      },
                      {
                        "expression": {
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2077,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "1035:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade storage pointer"
                              }
                            },
                            "id": 2079,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "poster",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2027,
                            "src": "1035:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1058:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1050:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2080,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1050:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1050:10:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1035:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2085,
                        "nodeType": "ExpressionStatement",
                        "src": "1035:25:6"
                      },
                      {
                        "expression": {
                          "id": 2090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2086,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "1074:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade storage pointer"
                              }
                            },
                            "id": 2088,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2029,
                            "src": "1074:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1089:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1074:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2091,
                        "nodeType": "ExpressionStatement",
                        "src": "1074:16:6"
                      },
                      {
                        "expression": {
                          "id": 2096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2092,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "1104:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade storage pointer"
                              }
                            },
                            "id": 2094,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2031,
                            "src": "1104:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1118:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1104:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2097,
                        "nodeType": "ExpressionStatement",
                        "src": "1104:15:6"
                      },
                      {
                        "expression": {
                          "id": 2102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2098,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "1133:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade storage pointer"
                              }
                            },
                            "id": 2100,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2033,
                            "src": "1133:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1148:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "1133:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2103,
                        "nodeType": "ExpressionStatement",
                        "src": "1133:17:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2064,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2061,
                      "src": "953:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2065,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "957:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "953:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2105,
                  "initializationExpression": {
                    "assignments": [
                      2061
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2061,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2105,
                        "src": "938:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2060,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "938:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2063,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "950:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "938:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "971:3:6",
                      "subExpression": {
                        "id": 2067,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2061,
                        "src": "971:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2069,
                    "nodeType": "ExpressionStatement",
                    "src": "971:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "933:228:6"
                },
                {
                  "expression": {
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2106,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "1170:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1185:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1170:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:16:6"
                }
              ]
            },
            "id": 2111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetTrades",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:2:6"
            },
            "returnParameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:0:6"
            },
            "scope": 2348,
            "src": "892:301:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2152,
              "nodeType": "Block",
              "src": "1421:179:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2126,
                            "name": "_trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2114,
                            "src": "1439:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2127,
                            "name": "tradeCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2041,
                            "src": "1448:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1439:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2129,
                            "name": "_trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2114,
                            "src": "1464:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1474:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1464:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1439:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1431:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2134,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:45:6"
                },
                {
                  "assignments": [
                    2137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2137,
                      "mutability": "mutable",
                      "name": "trade",
                      "nodeType": "VariableDeclaration",
                      "scope": 2152,
                      "src": "1486:18:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                        "typeString": "struct Market.Trade"
                      },
                      "typeName": {
                        "id": 2136,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2135,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2034,
                          "src": "1486:5:6"
                        },
                        "referencedDeclaration": 2034,
                        "src": "1486:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2141,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2138,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "1507:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                      }
                    },
                    "id": 2140,
                    "indexExpression": {
                      "id": 2139,
                      "name": "_trade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2114,
                      "src": "1514:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1507:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$2034_storage",
                      "typeString": "struct Market.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1486:35:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 2142,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2137,
                          "src": "1539:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                            "typeString": "struct Market.Trade memory"
                          }
                        },
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "poster",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2027,
                        "src": "1539:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2144,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2137,
                          "src": "1553:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                            "typeString": "struct Market.Trade memory"
                          }
                        },
                        "id": 2145,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2029,
                        "src": "1553:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2146,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2137,
                          "src": "1567:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                            "typeString": "struct Market.Trade memory"
                          }
                        },
                        "id": 2147,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2031,
                        "src": "1567:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2148,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2137,
                          "src": "1580:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                            "typeString": "struct Market.Trade memory"
                          }
                        },
                        "id": 2149,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2033,
                        "src": "1580:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 2150,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1538:55:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$",
                      "typeString": "tuple(address,uint256,uint256,bytes32)"
                    }
                  },
                  "functionReturnParameters": 2124,
                  "id": 2151,
                  "nodeType": "Return",
                  "src": "1531:62:6"
                }
              ]
            },
            "documentation": {
              "id": 2112,
              "nodeType": "StructuredDocumentation",
              "src": "1199:99:6",
              "text": " @dev Returns the details for a trade.\n @param _trade The id for the trade."
            },
            "functionSelector": "2db25e05",
            "id": 2153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "_trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "1321:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:16:6"
            },
            "returnParameters": {
              "id": 2124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "1381:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "1390:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "1399:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2123,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "1408:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2122,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1380:36:6"
            },
            "scope": 2348,
            "src": "1303:297:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2204,
              "nodeType": "Block",
              "src": "1837:615:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2161,
                        "name": "Platform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "2024:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                          "typeString": "type(contract Platform)"
                        }
                      },
                      "id": 2162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "time",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 825,
                      "src": "2024:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2041:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2024:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2202,
                    "nodeType": "Block",
                    "src": "2087:359:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2172,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2129:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2173,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2129:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2170,
                                    "name": "itemToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2025,
                                    "src": "2109:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2519",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2458,
                                  "src": "2109:19:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 2174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2109:31:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2175,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2156,
                                "src": "2144:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2109:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2169,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2101:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2101:51:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2178,
                        "nodeType": "ExpressionStatement",
                        "src": "2101:51:6"
                      },
                      {
                        "expression": {
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2179,
                              "name": "trades",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2039,
                              "src": "2166:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                                "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                              }
                            },
                            "id": 2181,
                            "indexExpression": {
                              "id": 2180,
                              "name": "tradeCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2041,
                              "src": "2173:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2166:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage",
                              "typeString": "struct Market.Trade storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2183,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2221:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2221:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2185,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2156,
                                "src": "2257:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2186,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2158,
                                "src": "2289:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "4f70656e",
                                "id": 2187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2321:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                  "typeString": "literal_string \"Open\""
                                },
                                "value": "Open"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                  "typeString": "literal_string \"Open\""
                                }
                              ],
                              "id": 2182,
                              "name": "Trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2034,
                              "src": "2189:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Trade_$2034_storage_ptr_$",
                                "typeString": "type(struct Market.Trade storage pointer)"
                              }
                            },
                            "id": 2188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "poster",
                              "amount",
                              "price",
                              "status"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2189:153:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                              "typeString": "struct Market.Trade memory"
                            }
                          },
                          "src": "2166:176:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_storage",
                            "typeString": "struct Market.Trade storage ref"
                          }
                        },
                        "id": 2190,
                        "nodeType": "ExpressionStatement",
                        "src": "2166:176:6"
                      },
                      {
                        "expression": {
                          "id": 2193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2191,
                            "name": "tradeCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2041,
                            "src": "2356:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 2192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2372:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2356:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2194,
                        "nodeType": "ExpressionStatement",
                        "src": "2356:17:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2196,
                                "name": "tradeCounter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2041,
                                "src": "2410:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 2197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2425:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2410:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "4f70656e",
                              "id": 2199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2428:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                "typeString": "literal_string \"Open\""
                              },
                              "value": "Open"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                "typeString": "literal_string \"Open\""
                              }
                            ],
                            "id": 2195,
                            "name": "TradeStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2013,
                            "src": "2392:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2392:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2201,
                        "nodeType": "EmitStatement",
                        "src": "2387:48:6"
                      }
                    ]
                  },
                  "id": 2203,
                  "nodeType": "IfStatement",
                  "src": "2020:426:6",
                  "trueBody": {
                    "id": 2168,
                    "nodeType": "Block",
                    "src": "2044:38:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2165,
                            "name": "resetTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2111,
                            "src": "2058:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2058:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2167,
                        "nodeType": "ExpressionStatement",
                        "src": "2058:13:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2154,
              "nodeType": "StructuredDocumentation",
              "src": "1606:155:6",
              "text": " @dev Opens a new trade. \n @param _amount Maximum of the number of tokens being sold\n @param _price The price for each token."
            },
            "functionSelector": "0c493fba",
            "id": 2205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2156,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "1785:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1785:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2158,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "1802:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1784:33:6"
            },
            "returnParameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:6"
            },
            "scope": 2348,
            "src": "1766:686:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2304,
              "nodeType": "Block",
              "src": "2859:730:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2954:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2215,
                        "name": "Platform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "2932:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                          "typeString": "type(contract Platform)"
                        }
                      },
                      "id": 2217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_changeReset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1158,
                      "src": "2932:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2932:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2220,
                  "nodeType": "ExpressionStatement",
                  "src": "2932:28:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2222,
                            "name": "_trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2210,
                            "src": "2978:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2223,
                            "name": "tradeCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2041,
                            "src": "2987:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2978:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2225,
                            "name": "_trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2210,
                            "src": "3003:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3013:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3003:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2978:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2970:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2970:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2230,
                  "nodeType": "ExpressionStatement",
                  "src": "2970:45:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2232,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2208,
                          "src": "3034:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3044:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3034:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3026:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3026:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2236,
                  "nodeType": "ExpressionStatement",
                  "src": "3026:20:6"
                },
                {
                  "assignments": [
                    2239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2239,
                      "mutability": "mutable",
                      "name": "trade",
                      "nodeType": "VariableDeclaration",
                      "scope": 2304,
                      "src": "3056:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                        "typeString": "struct Market.Trade"
                      },
                      "typeName": {
                        "id": 2238,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2237,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2034,
                          "src": "3056:5:6"
                        },
                        "referencedDeclaration": 2034,
                        "src": "3056:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2243,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2240,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "3078:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                      }
                    },
                    "id": 2242,
                    "indexExpression": {
                      "id": 2241,
                      "name": "_trade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2210,
                      "src": "3085:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3078:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$2034_storage",
                      "typeString": "struct Market.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3056:36:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2244,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2208,
                      "src": "3106:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 2245,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "3116:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade storage pointer"
                        }
                      },
                      "id": 2246,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2029,
                      "src": "3116:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3106:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2254,
                  "nodeType": "IfStatement",
                  "src": "3102:75:6",
                  "trueBody": {
                    "id": 2253,
                    "nodeType": "Block",
                    "src": "3130:47:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2248,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2208,
                            "src": "3144:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2249,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "3154:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade storage pointer"
                              }
                            },
                            "id": 2250,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2029,
                            "src": "3154:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3144:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2252,
                        "nodeType": "ExpressionStatement",
                        "src": "3144:22:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2256,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2239,
                            "src": "3194:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2033,
                          "src": "3194:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "4f70656e",
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3210:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          "value": "Open"
                        },
                        "src": "3194:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f74204f70656e2e",
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3218:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        },
                        "value": "Trade is not Open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        }
                      ],
                      "id": 2255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3186:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3186:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2262,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2266,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3324:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3324:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2268,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2239,
                          "src": "3336:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                            "typeString": "struct Market.Trade storage pointer"
                          }
                        },
                        "id": 2269,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "poster",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2027,
                        "src": "3336:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2270,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2208,
                          "src": "3350:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 2271,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2239,
                            "src": "3360:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2031,
                          "src": "3360:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3350:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2263,
                        "name": "currencyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "3297:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2519",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2500,
                      "src": "3297:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3297:75:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2275,
                  "nodeType": "ExpressionStatement",
                  "src": "3297:75:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3410:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3410:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2281,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2208,
                        "src": "3422:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2282,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2239,
                          "src": "3431:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                            "typeString": "struct Market.Trade storage pointer"
                          }
                        },
                        "id": 2283,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "poster",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2027,
                        "src": "3431:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2284,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2212,
                        "src": "3445:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2276,
                        "name": "InvestorFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "3382:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InvestorFactory_$587_$",
                          "typeString": "type(contract InvestorFactory)"
                        }
                      },
                      "id": 2278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 559,
                      "src": "3382:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,address,bytes32)"
                      }
                    },
                    "id": 2285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3382:76:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2286,
                  "nodeType": "ExpressionStatement",
                  "src": "3382:76:6"
                },
                {
                  "expression": {
                    "id": 2291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2287,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "3468:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade storage pointer"
                        }
                      },
                      "id": 2289,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2033,
                      "src": "3468:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4578656375746564",
                      "id": 2290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3483:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_05f4317aae43f6c24b2b85c6d8b21d5fa0a28cee0476cd52ca5d60d4787aab78",
                        "typeString": "literal_string \"Executed\""
                      },
                      "value": "Executed"
                    },
                    "src": "3468:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2292,
                  "nodeType": "ExpressionStatement",
                  "src": "3468:25:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2294,
                        "name": "_trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2210,
                        "src": "3526:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "4578656375746564",
                        "id": 2295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3534:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05f4317aae43f6c24b2b85c6d8b21d5fa0a28cee0476cd52ca5d60d4787aab78",
                          "typeString": "literal_string \"Executed\""
                        },
                        "value": "Executed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_05f4317aae43f6c24b2b85c6d8b21d5fa0a28cee0476cd52ca5d60d4787aab78",
                          "typeString": "literal_string \"Executed\""
                        }
                      ],
                      "id": 2293,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "3508:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3508:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2297,
                  "nodeType": "EmitStatement",
                  "src": "3503:42:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 2301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3577:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2298,
                        "name": "Platform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "3555:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                          "typeString": "type(contract Platform)"
                        }
                      },
                      "id": 2300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_changeReset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1158,
                      "src": "3555:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3555:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2303,
                  "nodeType": "ExpressionStatement",
                  "src": "3555:27:6"
                }
              ]
            },
            "documentation": {
              "id": 2206,
              "nodeType": "StructuredDocumentation",
              "src": "2458:308:6",
              "text": " @dev Executes a trade. Must have approved this contract to transfer the\n amount of currency specified to the poster. Transfers ownership of the\n item to the filler.\n @param _amount The amount of tokens to buy at that price\n @param _trade The id of an existing trade"
            },
            "functionSelector": "e8c6144f",
            "id": 2305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2208,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "2793:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2793:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2210,
                  "mutability": "mutable",
                  "name": "_trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "2810:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2810:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2212,
                  "mutability": "mutable",
                  "name": "hashUsername",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "2826:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2211,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2792:55:6"
            },
            "returnParameters": {
              "id": 2214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2859:0:6"
            },
            "scope": 2348,
            "src": "2771:818:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2346,
              "nodeType": "Block",
              "src": "3758:402:6",
              "statements": [
                {
                  "assignments": [
                    2313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2313,
                      "mutability": "mutable",
                      "name": "trade",
                      "nodeType": "VariableDeclaration",
                      "scope": 2346,
                      "src": "3768:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                        "typeString": "struct Market.Trade"
                      },
                      "typeName": {
                        "id": 2312,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2311,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2034,
                          "src": "3768:5:6"
                        },
                        "referencedDeclaration": 2034,
                        "src": "3768:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2317,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2314,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "3790:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                      }
                    },
                    "id": 2316,
                    "indexExpression": {
                      "id": 2315,
                      "name": "_trade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2308,
                      "src": "3797:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3790:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$2034_storage",
                      "typeString": "struct Market.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3768:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2319,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3835:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3835:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2321,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2313,
                            "src": "3849:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 2322,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "poster",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2027,
                          "src": "3849:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3835:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e2062652063616e63656c6c6564206f6e6c7920627920706f737465722e",
                        "id": 2324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3875:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_331e703da25b47ea750fcf81b37ecab70d142ca7619f495187e544ba2c064415",
                          "typeString": "literal_string \"Trade can be cancelled only by poster.\""
                        },
                        "value": "Trade can be cancelled only by poster."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_331e703da25b47ea750fcf81b37ecab70d142ca7619f495187e544ba2c064415",
                          "typeString": "literal_string \"Trade can be cancelled only by poster.\""
                        }
                      ],
                      "id": 2318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3814:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3814:111:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2326,
                  "nodeType": "ExpressionStatement",
                  "src": "3814:111:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2328,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2313,
                            "src": "3943:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 2329,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2033,
                          "src": "3943:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "4f70656e",
                          "id": 2330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3959:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          "value": "Open"
                        },
                        "src": "3943:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f74204f70656e2e",
                        "id": 2332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3967:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        },
                        "value": "Trade is not Open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        }
                      ],
                      "id": 2327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3935:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3935:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2334,
                  "nodeType": "ExpressionStatement",
                  "src": "3935:53:6"
                },
                {
                  "expression": {
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2335,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2313,
                        "src": "4074:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade storage pointer"
                        }
                      },
                      "id": 2337,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2033,
                      "src": "4074:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "43616e63656c6c6564",
                      "id": 2338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4089:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                        "typeString": "literal_string \"Cancelled\""
                      },
                      "value": "Cancelled"
                    },
                    "src": "4074:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2340,
                  "nodeType": "ExpressionStatement",
                  "src": "4074:26:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2342,
                        "name": "_trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2308,
                        "src": "4133:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 2343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4141:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "id": 2341,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "4115:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 2344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4115:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2345,
                  "nodeType": "EmitStatement",
                  "src": "4110:43:6"
                }
              ]
            },
            "documentation": {
              "id": 2306,
              "nodeType": "StructuredDocumentation",
              "src": "3595:102:6",
              "text": " @dev Cancels a trade by the poster.\n @param _trade The trade to be cancelled."
            },
            "functionSelector": "09ec6cc7",
            "id": 2347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "_trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 2347,
                  "src": "3723:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3723:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3722:16:6"
            },
            "returnParameters": {
              "id": 2310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3758:0:6"
            },
            "scope": 2348,
            "src": "3702:458:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2349,
        "src": "328:3834:6"
      }
    ],
    "src": "32:4130:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/Trading.sol",
    "exportedSymbols": {
      "IERC20": [
        2519
      ],
      "InvestorFactory": [
        587
      ],
      "Market": [
        2348
      ],
      "Platform": [
        1531
      ]
    },
    "id": 2349,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1999,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:25:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2001,
        "nodeType": "ImportDirective",
        "scope": 2349,
        "sourceUnit": 2520,
        "src": "59:70:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2000,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "67:6:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/InvestorFactory.sol",
        "file": "./InvestorFactory.sol",
        "id": 2003,
        "nodeType": "ImportDirective",
        "scope": 2349,
        "sourceUnit": 588,
        "src": "130:54:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2002,
              "name": "InvestorFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "138:15:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/praneet/college/others/RiskSmartContract/contracts/Platform.sol",
        "file": "./Platform.sol",
        "id": 2005,
        "nodeType": "ImportDirective",
        "scope": 2349,
        "sourceUnit": 1532,
        "src": "185:40:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2004,
              "name": "Platform",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "193:8:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2006,
              "name": "InvestorFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 587,
              "src": "347:15:6"
            },
            "id": 2007,
            "nodeType": "InheritanceSpecifier",
            "src": "347:15:6"
          }
        ],
        "contractDependencies": [
          587,
          1531
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2348,
        "linearizedBaseContracts": [
          2348,
          587,
          1531
        ],
        "name": "Market",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 2013,
            "name": "TradeStatusChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2009,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ad",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "393:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2011,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "405:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "392:28:6"
            },
            "src": "369:52:6"
          },
          {
            "constant": false,
            "id": 2022,
            "mutability": "mutable",
            "name": "currencyToken",
            "nodeType": "VariableDeclaration",
            "scope": 2348,
            "src": "427:82:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2519",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2015,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2014,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2519,
                "src": "427:6:6"
              },
              "referencedDeclaration": 2519,
              "src": "427:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2519",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307864414331374639353844326565353233613232303632303639393435393743313344383331656337",
                      "id": 2019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "465:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 2018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "457:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 2017,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "457:7:6",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 2020,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "457:51:6",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 2016,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2519,
                "src": "450:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2519_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 2021,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "450:59:6",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2519",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2025,
            "mutability": "mutable",
            "name": "itemToken",
            "nodeType": "VariableDeclaration",
            "scope": 2348,
            "src": "515:16:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2519",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2024,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2023,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2519,
                "src": "515:6:6"
              },
              "referencedDeclaration": 2519,
              "src": "515:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2519",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Market.Trade",
            "id": 2034,
            "members": [
              {
                "constant": false,
                "id": 2027,
                "mutability": "mutable",
                "name": "poster",
                "nodeType": "VariableDeclaration",
                "scope": 2034,
                "src": "561:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2026,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "561:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2029,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 2034,
                "src": "585:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2028,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "585:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2031,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 2034,
                "src": "609:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2030,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "609:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2033,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 2034,
                "src": "632:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2032,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "632:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "nodeType": "StructDefinition",
            "scope": 2348,
            "src": "538:144:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1e6c598e",
            "id": 2039,
            "mutability": "mutable",
            "name": "trades",
            "nodeType": "VariableDeclaration",
            "scope": 2348,
            "src": "688:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
              "typeString": "mapping(uint256 => struct Market.Trade)"
            },
            "typeName": {
              "id": 2038,
              "keyType": {
                "id": 2035,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "696:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "688:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                "typeString": "mapping(uint256 => struct Market.Trade)"
              },
              "valueType": {
                "id": 2037,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2036,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2034,
                  "src": "707:5:6"
                },
                "referencedDeclaration": 2034,
                "src": "707:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                  "typeString": "struct Market.Trade"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2041,
            "mutability": "mutable",
            "name": "tradeCounter",
            "nodeType": "VariableDeclaration",
            "scope": 2348,
            "src": "734:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2040,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "734:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2056,
              "nodeType": "Block",
              "src": "806:80:6",
              "statements": [
                {
                  "expression": {
                    "id": 2050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2046,
                      "name": "itemToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2025,
                      "src": "816:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2519",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2048,
                          "name": "_itemTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "835:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2047,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2519,
                        "src": "828:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2519_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "828:25:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2519",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "816:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2519",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2051,
                  "nodeType": "ExpressionStatement",
                  "src": "816:37:6"
                },
                {
                  "expression": {
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2052,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "863:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "878:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "863:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2055,
                  "nodeType": "ExpressionStatement",
                  "src": "863:16:6"
                }
              ]
            },
            "id": 2057,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "_itemTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "774:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "773:27:6"
            },
            "returnParameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "806:0:6"
            },
            "scope": 2348,
            "src": "761:125:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2110,
              "nodeType": "Block",
              "src": "923:270:6",
              "statements": [
                {
                  "body": {
                    "id": 2104,
                    "nodeType": "Block",
                    "src": "976:185:6",
                    "statements": [
                      {
                        "assignments": [
                          2072
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2072,
                            "mutability": "mutable",
                            "name": "trade",
                            "nodeType": "VariableDeclaration",
                            "scope": 2104,
                            "src": "990:19:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                              "typeString": "struct Market.Trade"
                            },
                            "typeName": {
                              "id": 2071,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2070,
                                "name": "Trade",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2034,
                                "src": "990:5:6"
                              },
                              "referencedDeclaration": 2034,
                              "src": "990:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2076,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2073,
                            "name": "trades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "1012:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                              "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                            }
                          },
                          "id": 2075,
                          "indexExpression": {
                            "id": 2074,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2061,
                            "src": "1019:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1012:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_storage",
                            "typeString": "struct Market.Trade storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "990:31:6"
                      },
                      {
                        "expression": {
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2077,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "1035:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade storage pointer"
                              }
                            },
                            "id": 2079,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "poster",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2027,
                            "src": "1035:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1058:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1050:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2080,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1050:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1050:10:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1035:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2085,
                        "nodeType": "ExpressionStatement",
                        "src": "1035:25:6"
                      },
                      {
                        "expression": {
                          "id": 2090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2086,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "1074:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade storage pointer"
                              }
                            },
                            "id": 2088,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2029,
                            "src": "1074:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1089:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1074:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2091,
                        "nodeType": "ExpressionStatement",
                        "src": "1074:16:6"
                      },
                      {
                        "expression": {
                          "id": 2096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2092,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "1104:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade storage pointer"
                              }
                            },
                            "id": 2094,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2031,
                            "src": "1104:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1118:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1104:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2097,
                        "nodeType": "ExpressionStatement",
                        "src": "1104:15:6"
                      },
                      {
                        "expression": {
                          "id": 2102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2098,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "1133:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade storage pointer"
                              }
                            },
                            "id": 2100,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2033,
                            "src": "1133:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1148:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "1133:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2103,
                        "nodeType": "ExpressionStatement",
                        "src": "1133:17:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2064,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2061,
                      "src": "953:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2065,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "957:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "953:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2105,
                  "initializationExpression": {
                    "assignments": [
                      2061
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2061,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2105,
                        "src": "938:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2060,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "938:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2063,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "950:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "938:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "971:3:6",
                      "subExpression": {
                        "id": 2067,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2061,
                        "src": "971:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2069,
                    "nodeType": "ExpressionStatement",
                    "src": "971:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "933:228:6"
                },
                {
                  "expression": {
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2106,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "1170:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1185:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1170:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:16:6"
                }
              ]
            },
            "id": 2111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetTrades",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:2:6"
            },
            "returnParameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:0:6"
            },
            "scope": 2348,
            "src": "892:301:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2152,
              "nodeType": "Block",
              "src": "1421:179:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2126,
                            "name": "_trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2114,
                            "src": "1439:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2127,
                            "name": "tradeCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2041,
                            "src": "1448:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1439:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2129,
                            "name": "_trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2114,
                            "src": "1464:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1474:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1464:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1439:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1431:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2134,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:45:6"
                },
                {
                  "assignments": [
                    2137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2137,
                      "mutability": "mutable",
                      "name": "trade",
                      "nodeType": "VariableDeclaration",
                      "scope": 2152,
                      "src": "1486:18:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                        "typeString": "struct Market.Trade"
                      },
                      "typeName": {
                        "id": 2136,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2135,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2034,
                          "src": "1486:5:6"
                        },
                        "referencedDeclaration": 2034,
                        "src": "1486:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2141,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2138,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "1507:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                      }
                    },
                    "id": 2140,
                    "indexExpression": {
                      "id": 2139,
                      "name": "_trade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2114,
                      "src": "1514:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1507:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$2034_storage",
                      "typeString": "struct Market.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1486:35:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 2142,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2137,
                          "src": "1539:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                            "typeString": "struct Market.Trade memory"
                          }
                        },
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "poster",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2027,
                        "src": "1539:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2144,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2137,
                          "src": "1553:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                            "typeString": "struct Market.Trade memory"
                          }
                        },
                        "id": 2145,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2029,
                        "src": "1553:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2146,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2137,
                          "src": "1567:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                            "typeString": "struct Market.Trade memory"
                          }
                        },
                        "id": 2147,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2031,
                        "src": "1567:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2148,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2137,
                          "src": "1580:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                            "typeString": "struct Market.Trade memory"
                          }
                        },
                        "id": 2149,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2033,
                        "src": "1580:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 2150,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1538:55:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$",
                      "typeString": "tuple(address,uint256,uint256,bytes32)"
                    }
                  },
                  "functionReturnParameters": 2124,
                  "id": 2151,
                  "nodeType": "Return",
                  "src": "1531:62:6"
                }
              ]
            },
            "documentation": {
              "id": 2112,
              "nodeType": "StructuredDocumentation",
              "src": "1199:99:6",
              "text": " @dev Returns the details for a trade.\n @param _trade The id for the trade."
            },
            "functionSelector": "2db25e05",
            "id": 2153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "_trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "1321:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:16:6"
            },
            "returnParameters": {
              "id": 2124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "1381:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "1390:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "1399:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2123,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "1408:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2122,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1380:36:6"
            },
            "scope": 2348,
            "src": "1303:297:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2204,
              "nodeType": "Block",
              "src": "1837:615:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2161,
                        "name": "Platform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "2024:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                          "typeString": "type(contract Platform)"
                        }
                      },
                      "id": 2162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "time",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 825,
                      "src": "2024:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2041:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2024:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2202,
                    "nodeType": "Block",
                    "src": "2087:359:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2172,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2129:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2173,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2129:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2170,
                                    "name": "itemToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2025,
                                    "src": "2109:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2519",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2458,
                                  "src": "2109:19:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 2174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2109:31:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2175,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2156,
                                "src": "2144:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2109:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2169,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2101:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2101:51:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2178,
                        "nodeType": "ExpressionStatement",
                        "src": "2101:51:6"
                      },
                      {
                        "expression": {
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2179,
                              "name": "trades",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2039,
                              "src": "2166:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                                "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                              }
                            },
                            "id": 2181,
                            "indexExpression": {
                              "id": 2180,
                              "name": "tradeCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2041,
                              "src": "2173:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2166:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage",
                              "typeString": "struct Market.Trade storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2183,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2221:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2221:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2185,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2156,
                                "src": "2257:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2186,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2158,
                                "src": "2289:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "4f70656e",
                                "id": 2187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2321:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                  "typeString": "literal_string \"Open\""
                                },
                                "value": "Open"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                  "typeString": "literal_string \"Open\""
                                }
                              ],
                              "id": 2182,
                              "name": "Trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2034,
                              "src": "2189:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Trade_$2034_storage_ptr_$",
                                "typeString": "type(struct Market.Trade storage pointer)"
                              }
                            },
                            "id": 2188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "poster",
                              "amount",
                              "price",
                              "status"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2189:153:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_memory_ptr",
                              "typeString": "struct Market.Trade memory"
                            }
                          },
                          "src": "2166:176:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_storage",
                            "typeString": "struct Market.Trade storage ref"
                          }
                        },
                        "id": 2190,
                        "nodeType": "ExpressionStatement",
                        "src": "2166:176:6"
                      },
                      {
                        "expression": {
                          "id": 2193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2191,
                            "name": "tradeCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2041,
                            "src": "2356:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 2192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2372:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2356:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2194,
                        "nodeType": "ExpressionStatement",
                        "src": "2356:17:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2196,
                                "name": "tradeCounter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2041,
                                "src": "2410:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 2197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2425:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2410:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "4f70656e",
                              "id": 2199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2428:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                "typeString": "literal_string \"Open\""
                              },
                              "value": "Open"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                "typeString": "literal_string \"Open\""
                              }
                            ],
                            "id": 2195,
                            "name": "TradeStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2013,
                            "src": "2392:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2392:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2201,
                        "nodeType": "EmitStatement",
                        "src": "2387:48:6"
                      }
                    ]
                  },
                  "id": 2203,
                  "nodeType": "IfStatement",
                  "src": "2020:426:6",
                  "trueBody": {
                    "id": 2168,
                    "nodeType": "Block",
                    "src": "2044:38:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2165,
                            "name": "resetTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2111,
                            "src": "2058:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2058:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2167,
                        "nodeType": "ExpressionStatement",
                        "src": "2058:13:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2154,
              "nodeType": "StructuredDocumentation",
              "src": "1606:155:6",
              "text": " @dev Opens a new trade. \n @param _amount Maximum of the number of tokens being sold\n @param _price The price for each token."
            },
            "functionSelector": "0c493fba",
            "id": 2205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2156,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "1785:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1785:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2158,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "1802:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1784:33:6"
            },
            "returnParameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:6"
            },
            "scope": 2348,
            "src": "1766:686:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2304,
              "nodeType": "Block",
              "src": "2859:730:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2954:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2215,
                        "name": "Platform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "2932:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                          "typeString": "type(contract Platform)"
                        }
                      },
                      "id": 2217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_changeReset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1158,
                      "src": "2932:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2932:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2220,
                  "nodeType": "ExpressionStatement",
                  "src": "2932:28:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2222,
                            "name": "_trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2210,
                            "src": "2978:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2223,
                            "name": "tradeCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2041,
                            "src": "2987:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2978:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2225,
                            "name": "_trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2210,
                            "src": "3003:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3013:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3003:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2978:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2970:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2970:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2230,
                  "nodeType": "ExpressionStatement",
                  "src": "2970:45:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2232,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2208,
                          "src": "3034:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3044:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3034:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3026:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3026:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2236,
                  "nodeType": "ExpressionStatement",
                  "src": "3026:20:6"
                },
                {
                  "assignments": [
                    2239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2239,
                      "mutability": "mutable",
                      "name": "trade",
                      "nodeType": "VariableDeclaration",
                      "scope": 2304,
                      "src": "3056:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                        "typeString": "struct Market.Trade"
                      },
                      "typeName": {
                        "id": 2238,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2237,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2034,
                          "src": "3056:5:6"
                        },
                        "referencedDeclaration": 2034,
                        "src": "3056:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2243,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2240,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "3078:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                      }
                    },
                    "id": 2242,
                    "indexExpression": {
                      "id": 2241,
                      "name": "_trade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2210,
                      "src": "3085:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3078:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$2034_storage",
                      "typeString": "struct Market.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3056:36:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2244,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2208,
                      "src": "3106:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 2245,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "3116:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade storage pointer"
                        }
                      },
                      "id": 2246,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2029,
                      "src": "3116:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3106:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2254,
                  "nodeType": "IfStatement",
                  "src": "3102:75:6",
                  "trueBody": {
                    "id": 2253,
                    "nodeType": "Block",
                    "src": "3130:47:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2248,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2208,
                            "src": "3144:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2249,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "3154:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                                "typeString": "struct Market.Trade storage pointer"
                              }
                            },
                            "id": 2250,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2029,
                            "src": "3154:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3144:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2252,
                        "nodeType": "ExpressionStatement",
                        "src": "3144:22:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2256,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2239,
                            "src": "3194:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2033,
                          "src": "3194:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "4f70656e",
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3210:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          "value": "Open"
                        },
                        "src": "3194:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f74204f70656e2e",
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3218:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        },
                        "value": "Trade is not Open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        }
                      ],
                      "id": 2255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3186:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3186:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2262,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2266,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3324:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3324:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2268,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2239,
                          "src": "3336:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                            "typeString": "struct Market.Trade storage pointer"
                          }
                        },
                        "id": 2269,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "poster",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2027,
                        "src": "3336:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2270,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2208,
                          "src": "3350:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 2271,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2239,
                            "src": "3360:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2031,
                          "src": "3360:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3350:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2263,
                        "name": "currencyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "3297:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2519",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2500,
                      "src": "3297:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3297:75:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2275,
                  "nodeType": "ExpressionStatement",
                  "src": "3297:75:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3410:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3410:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2281,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2208,
                        "src": "3422:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2282,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2239,
                          "src": "3431:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                            "typeString": "struct Market.Trade storage pointer"
                          }
                        },
                        "id": 2283,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "poster",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2027,
                        "src": "3431:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2284,
                        "name": "hashUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2212,
                        "src": "3445:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2276,
                        "name": "InvestorFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "3382:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InvestorFactory_$587_$",
                          "typeString": "type(contract InvestorFactory)"
                        }
                      },
                      "id": 2278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 559,
                      "src": "3382:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,address,bytes32)"
                      }
                    },
                    "id": 2285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3382:76:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2286,
                  "nodeType": "ExpressionStatement",
                  "src": "3382:76:6"
                },
                {
                  "expression": {
                    "id": 2291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2287,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "3468:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade storage pointer"
                        }
                      },
                      "id": 2289,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2033,
                      "src": "3468:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4578656375746564",
                      "id": 2290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3483:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_05f4317aae43f6c24b2b85c6d8b21d5fa0a28cee0476cd52ca5d60d4787aab78",
                        "typeString": "literal_string \"Executed\""
                      },
                      "value": "Executed"
                    },
                    "src": "3468:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2292,
                  "nodeType": "ExpressionStatement",
                  "src": "3468:25:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2294,
                        "name": "_trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2210,
                        "src": "3526:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "4578656375746564",
                        "id": 2295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3534:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05f4317aae43f6c24b2b85c6d8b21d5fa0a28cee0476cd52ca5d60d4787aab78",
                          "typeString": "literal_string \"Executed\""
                        },
                        "value": "Executed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_05f4317aae43f6c24b2b85c6d8b21d5fa0a28cee0476cd52ca5d60d4787aab78",
                          "typeString": "literal_string \"Executed\""
                        }
                      ],
                      "id": 2293,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "3508:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3508:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2297,
                  "nodeType": "EmitStatement",
                  "src": "3503:42:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 2301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3577:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2298,
                        "name": "Platform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "3555:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Platform_$1531_$",
                          "typeString": "type(contract Platform)"
                        }
                      },
                      "id": 2300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_changeReset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1158,
                      "src": "3555:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3555:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2303,
                  "nodeType": "ExpressionStatement",
                  "src": "3555:27:6"
                }
              ]
            },
            "documentation": {
              "id": 2206,
              "nodeType": "StructuredDocumentation",
              "src": "2458:308:6",
              "text": " @dev Executes a trade. Must have approved this contract to transfer the\n amount of currency specified to the poster. Transfers ownership of the\n item to the filler.\n @param _amount The amount of tokens to buy at that price\n @param _trade The id of an existing trade"
            },
            "functionSelector": "e8c6144f",
            "id": 2305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2208,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "2793:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2793:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2210,
                  "mutability": "mutable",
                  "name": "_trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "2810:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2810:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2212,
                  "mutability": "mutable",
                  "name": "hashUsername",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "2826:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2211,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2792:55:6"
            },
            "returnParameters": {
              "id": 2214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2859:0:6"
            },
            "scope": 2348,
            "src": "2771:818:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2346,
              "nodeType": "Block",
              "src": "3758:402:6",
              "statements": [
                {
                  "assignments": [
                    2313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2313,
                      "mutability": "mutable",
                      "name": "trade",
                      "nodeType": "VariableDeclaration",
                      "scope": 2346,
                      "src": "3768:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                        "typeString": "struct Market.Trade"
                      },
                      "typeName": {
                        "id": 2312,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2311,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2034,
                          "src": "3768:5:6"
                        },
                        "referencedDeclaration": 2034,
                        "src": "3768:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2317,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2314,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "3790:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$2034_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                      }
                    },
                    "id": 2316,
                    "indexExpression": {
                      "id": 2315,
                      "name": "_trade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2308,
                      "src": "3797:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3790:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$2034_storage",
                      "typeString": "struct Market.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3768:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2319,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3835:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3835:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2321,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2313,
                            "src": "3849:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 2322,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "poster",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2027,
                          "src": "3849:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3835:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e2062652063616e63656c6c6564206f6e6c7920627920706f737465722e",
                        "id": 2324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3875:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_331e703da25b47ea750fcf81b37ecab70d142ca7619f495187e544ba2c064415",
                          "typeString": "literal_string \"Trade can be cancelled only by poster.\""
                        },
                        "value": "Trade can be cancelled only by poster."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_331e703da25b47ea750fcf81b37ecab70d142ca7619f495187e544ba2c064415",
                          "typeString": "literal_string \"Trade can be cancelled only by poster.\""
                        }
                      ],
                      "id": 2318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3814:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3814:111:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2326,
                  "nodeType": "ExpressionStatement",
                  "src": "3814:111:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2328,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2313,
                            "src": "3943:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 2329,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2033,
                          "src": "3943:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "4f70656e",
                          "id": 2330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3959:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          "value": "Open"
                        },
                        "src": "3943:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f74204f70656e2e",
                        "id": 2332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3967:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        },
                        "value": "Trade is not Open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        }
                      ],
                      "id": 2327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3935:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3935:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2334,
                  "nodeType": "ExpressionStatement",
                  "src": "3935:53:6"
                },
                {
                  "expression": {
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2335,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2313,
                        "src": "4074:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$2034_storage_ptr",
                          "typeString": "struct Market.Trade storage pointer"
                        }
                      },
                      "id": 2337,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2033,
                      "src": "4074:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "43616e63656c6c6564",
                      "id": 2338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4089:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                        "typeString": "literal_string \"Cancelled\""
                      },
                      "value": "Cancelled"
                    },
                    "src": "4074:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2340,
                  "nodeType": "ExpressionStatement",
                  "src": "4074:26:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2342,
                        "name": "_trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2308,
                        "src": "4133:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 2343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4141:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "id": 2341,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "4115:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 2344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4115:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2345,
                  "nodeType": "EmitStatement",
                  "src": "4110:43:6"
                }
              ]
            },
            "documentation": {
              "id": 2306,
              "nodeType": "StructuredDocumentation",
              "src": "3595:102:6",
              "text": " @dev Cancels a trade by the poster.\n @param _trade The trade to be cancelled."
            },
            "functionSelector": "09ec6cc7",
            "id": 2347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "_trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 2347,
                  "src": "3723:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3723:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3722:16:6"
            },
            "returnParameters": {
              "id": 2310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3758:0:6"
            },
            "scope": 2348,
            "src": "3702:458:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2349,
        "src": "328:3834:6"
      }
    ],
    "src": "32:4130:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-04-08T02:20:52.966Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "cancelTrade(uint256)": {
        "details": "Cancels a trade by the poster.",
        "params": {
          "_trade": "The trade to be cancelled."
        }
      },
      "executeTrade(uint256,uint256,bytes32)": {
        "details": "Executes a trade. Must have approved this contract to transfer the amount of currency specified to the poster. Transfers ownership of the item to the filler.",
        "params": {
          "_amount": "The amount of tokens to buy at that price",
          "_trade": "The id of an existing trade"
        }
      },
      "getTrade(uint256)": {
        "details": "Returns the details for a trade.",
        "params": {
          "_trade": "The id for the trade."
        }
      },
      "openTrade(uint256,uint256)": {
        "details": "Opens a new trade. ",
        "params": {
          "_amount": "Maximum of the number of tokens being sold",
          "_price": "The price for each token."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}